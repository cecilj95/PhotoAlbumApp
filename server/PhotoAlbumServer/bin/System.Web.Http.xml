<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http</name>
  </assembly>
  <members>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> that represents an exception.</summary>
      <returns>The request must be associated with an <see cref="T:System.Web.Http.HttpConfiguration" /> instance.An <see cref="T:System.Net.Http.HttpResponseMessage" /> whose content is a serialized representation of an  <see cref="T:System.Web.Http.HttpError" /> instance.</returns>
      <param name="request">The HTTP request.</param>
      <param name="statusCode">The status code of the response.</param>
      <param name="exception">The exception.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> that represents an error message.</summary>
      <returns>The request must be associated with an <see cref="T:System.Web.Http.HttpConfiguration" /> instance.An <see cref="T:System.Net.Http.HttpResponseMessage" /> whose content is a serialized representation of an <see cref="T:System.Web.Http.HttpError" /> instance.</returns>
      <param name="request">The HTTP request.</param>
      <param name="statusCode">The status code of the response.</param>
      <param name="message">The error message.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> that represents an exception with an error message.</summary>
      <returns>The request must be associated with an <see cref="T:System.Web.Http.HttpConfiguration" /> instance.An <see cref="T:System.Net.Http.HttpResponseMessage" /> whose content is a serialized representation of an <see cref="T:System.Web.Http.HttpError" /> instance.</returns>
      <param name="request">The HTTP request.</param>
      <param name="statusCode">The status code of the response.</param>
      <param name="message">The error message.</param>
      <param name="exception">The exception.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> that represents an error.</summary>
      <returns>The request must be associated with an <see cref="T:System.Web.Http.HttpConfiguration" /> instance.An <see cref="T:System.Net.Http.HttpResponseMessage" /> whose content is a serialized representation of an <see cref="T:System.Web.Http.HttpError" /> instance.</returns>
      <param name="request">The HTTP request.</param>
      <param name="statusCode">The status code of the response.</param>
      <param name="error">The HTTP error.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> that represents an error in the model state.</summary>
      <returns>The request must be associated with an <see cref="T:System.Web.Http.HttpConfiguration" /> instance.An <see cref="T:System.Net.Http.HttpResponseMessage" /> whose content is a serialized representation of an <see cref="T:System.Web.Http.HttpError" /> instance.</returns>
      <param name="request">The HTTP request.</param>
      <param name="statusCode">The status code of the response.</param>
      <param name="modelState">The model state.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message which led to this response message.</param>
      <param name="statusCode">The HTTP response status code.</param>
      <param name="value">The content of the HTTP response message.</param>
      <typeparam name="T">The type of the HTTP response message.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message which led to this response message.</param>
      <param name="statusCode">The HTTP response status code.</param>
      <param name="value">The content of the HTTP response message.</param>
      <param name="formatter">The media type formatter.</param>
      <typeparam name="T">The type of the HTTP response message.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message which led to this response message.</param>
      <param name="statusCode">The HTTP response status code.</param>
      <param name="value">The content of the HTTP response message.</param>
      <param name="formatter">The media type formatter.</param>
      <param name="mediaType">The media type header value.</param>
      <typeparam name="T">The type of the HTTP response message.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message which led to this response message.</param>
      <param name="statusCode">The HTTP response status code.</param>
      <param name="value">The content of the HTTP response message.</param>
      <param name="formatter">The media type formatter.</param>
      <param name="mediaType">The media type.</param>
      <typeparam name="T">The type of the HTTP response message.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message which led to this response message.</param>
      <param name="statusCode">The HTTP response status code.</param>
      <param name="value">The content of the HTTP response message.</param>
      <param name="mediaType">The media type header value.</param>
      <typeparam name="T">The type of the HTTP response message.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message which led to this response message.</param>
      <param name="statusCode">The HTTP response status code.</param>
      <param name="value">The content of the HTTP response message.</param>
      <param name="mediaType">The media type.</param>
      <typeparam name="T">The type of the HTTP response message.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Web.Http.HttpConfiguration)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>An initialized <see cref="T:System.Net.Http.HttpResponseMessage" /> wired up to the associated <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message which led to this response message.</param>
      <param name="statusCode">The HTTP response status code.</param>
      <param name="value">The content of the HTTP response message.</param>
      <param name="configuration">The HTTP configuration which contains the dependency resolver used to resolve services.</param>
      <typeparam name="T">The type of the HTTP response message.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.DisposeRequestResources(System.Net.Http.HttpRequestMessage)">
      <summary>Disposes of all tracked resources associated with the <paramref name="request" /> which were added via the <see cref="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)" /> method.</summary>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetActionDescriptor(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetClientCertificate(System.Net.Http.HttpRequestMessage)">
      <summary>Gets the current X.509 certificate from the given HTTP request.</summary>
      <returns>The current <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />, or null if a certificate is not available.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetConfiguration(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the <see cref="T:System.Web.Http.HttpConfiguration" /> for the given request.</summary>
      <returns>The <see cref="T:System.Web.Http.HttpConfiguration" /> for the given request.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetCorrelationId(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the <see cref="T:System.Guid" /> which has been assigned as the correlation ID associated with the given <paramref name="request" />. The value will be created and set the first time this method is called.</summary>
      <returns>The <see cref="T:System.Guid" /> object that represents the correlation ID associated with the request.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetDependencyScope(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> for the given request or null if not available.</summary>
      <returns>The <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> for the given request or null if not available.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetQueryNameValuePairs(System.Net.Http.HttpRequestMessage)">
      <summary>Gets the parsed query string as a collection of key-value pairs.</summary>
      <returns>The query string as a collection of key-value pairs.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRequestContext(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetResourcesForDisposal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> for the given request or null if not available.</summary>
      <returns>The <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> for the given request or null if not available.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetSynchronizationContext(System.Net.Http.HttpRequestMessage)">
      <summary>Retrieves the <see cref="T:System.Threading.SynchronizationContext" /> for the given request or null if not available.</summary>
      <returns>The <see cref="T:System.Threading.SynchronizationContext" /> for the given request or null if not available.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetUrlHelper(System.Net.Http.HttpRequestMessage)">
      <summary>Gets a <see cref="T:System.Web.Http.Routing.UrlHelper" /> instance for an HTTP request.</summary>
      <returns>A <see cref="T:System.Web.Http.Routing.UrlHelper" /> instance that is initialized for the specified HTTP request.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsBatchRequest(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsLocal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.IDisposable})"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)">
      <summary>Adds the given <paramref name="resource" /> to a list of resources that will be disposed by a host once the <paramref name="request" /> is disposed.</summary>
      <param name="request">The HTTP request controlling the lifecycle of <paramref name="resource" />.</param>
      <param name="resource">The resource to dispose when <paramref name="request" /> is being disposed.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetConfiguration(System.Net.Http.HttpRequestMessage,System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRequestContext(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpRequestContext)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRouteData(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRouteData)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.ShouldIncludeErrorDetail(System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Net.Http.HttpResponseMessageExtensions">
      <summary>Represents the message extensions for the HTTP response from an ASP.NET operation.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.TryGetContentValue``1(System.Net.Http.HttpResponseMessage,``0@)">
      <summary>Attempts to retrieve the value of the content for the <see cref="T:System.Net.Http.HttpResponseMessageExtensions" />.</summary>
      <returns>The result of the retrieval of value of the content.</returns>
      <param name="response">The response of the operation.</param>
      <param name="value">The value of the content.</param>
      <typeparam name="T">The type of the value to retrieve.</typeparam>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterExtensions">
      <summary>Represents extensions for adding <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> items to a <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)"></member>
    <member name="T:System.Net.Http.Formatting.UriPathExtensionMapping">
      <summary>Provides <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />s from path extensions appearing in a <see cref="T:System.Uri" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> class. </summary>
      <param name="uriPathExtension">The extension corresponding to mediaType. This value should not include a dot or wildcards.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> that will be returned if uriPathExtension is matched.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> class. </summary>
      <param name="uriPathExtension">The extension corresponding to mediaType. This value should not include a dot or wildcards.</param>
      <param name="mediaType">The media type that will be returned if uriPathExtension is matched.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Returns a value indicating whether this <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> instance can provide a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> for the <see cref="T:System.Uri" />  of request. </summary>
      <returns>If this instance can match a file extension in request it returns 1.0 otherwise 0.0.</returns>
      <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" /> to check.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtension">
      <summary> Gets the <see cref="T:System.Uri" /> path extension. </summary>
      <returns>The <see cref="T:System.Uri" /> path extension.</returns>
    </member>
    <member name="F:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtensionKey">
      <summary>The <see cref="T:System.Uri" /> path extension key.</summary>
    </member>
    <member name="T:System.Web.Http.AcceptVerbsAttribute">
      <summary>Represents an attribute that specifies which HTTP methods an action method will respond to.</summary>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.AcceptVerbsAttribute" /> class by using the action method it will respond to.</summary>
      <param name="method">The HTTP method that the action method will respond to.</param>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.AcceptVerbsAttribute" /> class by using a list of HTTP methods that the action method will respond to.</summary>
      <param name="methods">The HTTP methods that the action method will respond to.</param>
    </member>
    <member name="P:System.Web.Http.AcceptVerbsAttribute.HttpMethods">
      <summary>Gets or sets the list of HTTP methods that the action method will respond to.</summary>
      <returns>Gets or sets the list of HTTP methods that the action method will respond to.</returns>
    </member>
    <member name="T:System.Web.Http.ActionNameAttribute">
      <summary>Represents an attribute that is used for the name of an action.</summary>
    </member>
    <member name="M:System.Web.Http.ActionNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ActionNameAttribute" /> class.</summary>
      <param name="name">The name of the action.</param>
    </member>
    <member name="P:System.Web.Http.ActionNameAttribute.Name">
      <summary>Gets or sets the name of the action.</summary>
      <returns>The name of the action.</returns>
    </member>
    <member name="T:System.Web.Http.AllowAnonymousAttribute">
      <summary>Specifies that actions and controllers are skipped by <see cref="T:System.Web.Http.AuthorizeAttribute" /> during authorization.</summary>
    </member>
    <member name="M:System.Web.Http.AllowAnonymousAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.AllowAnonymousAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.Http.ApiController">
      <summary>Defines properties and methods for API controller.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.#ctor"></member>
    <member name="P:System.Web.Http.ApiController.ActionContext">
      <summary>Gets the action context.</summary>
      <returns>The action context.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest">
      <summary>Creates a <see cref="T:System.Web.Http.Results.BadRequestResult" />.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.BadRequestResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.String)">
      <summary>Creates an <see cref="T:System.Web.Http.Results.ErrorMessageResult" /> (400 Bad Request) with the specified error message.</summary>
      <returns>An <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> with the specified model state.</returns>
      <param name="message">The user-visible error message.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Creates an <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> with the specified model state.</summary>
      <returns>An <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> with the specified model state.</returns>
      <param name="modelState">The model state to include in the error.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Configuration">
      <summary>Gets the <see cref="T:System.Web.Http.HttpConfiguration" /> of the current <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>The <see cref="T:System.Web.Http.HttpConfiguration" /> of the current <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Conflict">
      <summary>Creates a <see cref="T:System.Web.Http.Results.ConflictResult" /> (409 Conflict).</summary>
      <returns>A <see cref="T:System.Web.Http.Results.ConflictResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
      <summary>Creates a &lt;see cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; with the specified values.</summary>
      <returns>A &lt;see cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; with the specified values.</returns>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="value">The content value to negotiate and format in the entity body.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Creates a &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; with the specified values.</summary>
      <returns>A &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; with the specified values.</returns>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="value">The content value to format in the entity body.</param>
      <param name="formatter">The formatter to use to format the content.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Creates a &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; with the specified values.</summary>
      <returns>A &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; with the specified values.</returns>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="value">The content value to format in the entity body.</param>
      <param name="formatter">The formatter to use to format the content.</param>
      <param name="mediaType"> The value for the Content-Type header, or &lt;see langword="null" /&gt; to have the formatter pick a default value. </param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Creates a &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; with the specified values.</summary>
      <returns>A &lt;see cref="T:System.Web.Http.FormattedContentResult`1" /&gt; with the specified values.</returns>
      <param name="statusCode">The HTTP status code for the response message.</param>
      <param name="value">The content value to format in the entity body.</param>
      <param name="formatter">The formatter to use to format the content.</param>
      <param name="mediaType">The value for the Content-Type header.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ControllerContext">
      <summary>Gets the <see cref="T:System.Web.Http.HttpConfiguration" /> of the current <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>The <see cref="T:System.Web.Http.HttpConfiguration" /> of the current <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
      <summary>Creates a <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> (201 Created) with the specified values.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> with the specified values.</returns>
      <param name="location">The location at which the content has been created.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
      <summary>Creates a <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> (201 Created) with the specified values.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> with the specified values.</returns>
      <param name="location">The location at which the content has been created.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
      <summary>Creates a <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> (201 Created) with the specified values.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> with the specified values.</returns>
      <param name="routeName">The name of the route to use for generating the URL.</param>
      <param name="routeValues">The route data to use for generating the URL.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
      <summary>Creates a <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> (201 Created) with the specified values.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> with the specified values.</returns>
      <param name="routeName">The name of the route to use for generating the URL.</param>
      <param name="routeValues">The route data to use for generating the URL.</param>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the object and, optionally, releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Executes asynchronously a single HTTP operation.</summary>
      <returns>The newly started task.</returns>
      <param name="controllerContext">The controller context for a single HTTP operation.</param>
      <param name="cancellationToken">The cancellation token assigned for the HTTP operation.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Initializes the <see cref="T:System.Web.Http.ApiController" /> instance with the specified controllerContext.</summary>
      <param name="controllerContext">The <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> object that is used for the initialization.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.InternalServerError">
      <summary>Creates an <see cref="T:System.Web.Http.Results.InternalServerErrorResult" /> (500 Internal Server Error).</summary>
      <returns>A <see cref="T:System.Web.Http.Results.InternalServerErrorResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
      <summary>Creates an <see cref="T:System.Web.Http.Results.ExceptionResult" /> (500 Internal Server Error) with the specified exception.</summary>
      <returns>An <see cref="T:System.Web.Http.Results.ExceptionResult" /> with the specified exception.</returns>
      <param name="exception">The exception to include in the error.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0)">
      <summary>Creates a <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) with the specified value.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.JsonResult`1" /> with the specified value.</returns>
      <param name="content">The content value to serialize in the entity body.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
      <summary>Creates a <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) with the specified values.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.JsonResult`1" /> with the specified values.</returns>
      <param name="content">The content value to serialize in the entity body.</param>
      <param name="serializerSettings">The serializer settings.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
      <summary>Creates a <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) with the specified values.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.JsonResult`1" /> with the specified values.</returns>
      <param name="content">The content value to serialize in the entity body.</param>
      <param name="serializerSettings">The serializer settings.</param>
      <param name="encoding">The content encoding.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ModelState">
      <summary>Gets the model state after the model binding process.</summary>
      <returns>The model state after the model binding process.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.NotFound">
      <summary>Creates a <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.NotFoundResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok">
      <summary>Creates an <see cref="T:System.Web.Http.Results.OkResult" /> (200 OK).</summary>
      <returns>An <see cref="T:System.Web.Http.Results.OkResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok``1(``0)">
      <summary>Creates an <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> with the specified values.</summary>
      <returns>An <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> with the specified values.</returns>
      <param name="content">The content value to negotiate and format in the entity body.</param>
      <typeparam name="T">The type of content in the entity body.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Redirect(System.String)">
      <summary>Creates a redirect result (302 Found) with the specified value.</summary>
      <returns>A redirect result (302 Found) with the specified value.</returns>
      <param name="location">The location to redirect to.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Redirect(System.Uri)">
      <summary>Creates a redirect result (302 Found) with the specified value.</summary>
      <returns>A redirect result (302 Found) with the specified value.</returns>
      <param name="location">The location to redirect to.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Creates a redirect to route result (302 Found) with the specified values.</summary>
      <returns>A redirect to route result (302 Found) with the specified values.</returns>
      <param name="routeName">The name of the route to use for generating the URL.</param>
      <param name="routeValues">The route data to use for generating the URL.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
      <summary>Creates a redirect to route result (302 Found) with the specified values.</summary>
      <returns>A redirect to route result (302 Found) with the specified values.</returns>
      <param name="routeName">The name of the route to use for generating the URL.</param>
      <param name="routeValues">The route data to use for generating the URL.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Request">
      <summary>Gets or sets the HttpRequestMessage of the current <see cref="T:System.Web.Http.ApiController" />.</summary>
      <returns>The HttpRequestMessage of the current <see cref="T:System.Web.Http.ApiController" />.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.RequestContext">
      <summary>Gets the request context.</summary>
      <returns>The request context.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
      <summary>Creates a <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> with the specified response.</summary>
      <returns>A <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> for the specified response.</returns>
      <param name="response">The HTTP response message.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
      <summary>Creates a <see cref="T:System.Web.Http.StatusCodeResult" /> with the specified status code.</summary>
      <returns>A <see cref="T:System.Web.Http.StatusCodeResult" /> with the specified status code.</returns>
      <param name="status">The HTTP status code for the response message</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
      <summary>Creates an <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> (401 Unauthorized) with the specified values.</summary>
      <returns>An <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> with the specified values.</returns>
      <param name="challenges">The WWW-Authenticate challenges.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
      <summary>Creates an <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> (401 Unauthorized) with the specified values.</summary>
      <returns>An <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> with the specified values.</returns>
      <param name="challenges">The WWW-Authenticate challenges.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Url">
      <summary>Gets an instance of a <see cref="T:System.Web.Http.Routing.UrlHelper" />, which is used to generate URLs to other APIs. </summary>
      <returns>A <see cref="T:System.Web.Http.Routing.UrlHelper" />, which is used to generate URLs to other APIs.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.User">
      <summary>Returns the current principal associated with this request.</summary>
      <returns>The current principal associated with this request.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Validate``1(``0)">
      <summary>Validates the given entity and adds the validation errors to the model state under the empty prefix, if any.</summary>
      <param name="entity">The entity being validated.</param>
      <typeparam name="TEntity">The type of the entity to be validated.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
      <summary>Validates the given entity and adds the validation errors to the model state, if any.</summary>
      <param name="entity">The entity being validated.</param>
      <param name="keyPrefix">The key prefix under which the model state errors would be added in the model state.</param>
      <typeparam name="TEntity">The type of the entity to be validated.</typeparam>
    </member>
    <member name="T:System.Web.Http.AuthorizeAttribute">
      <summary>Specifies the authorization filter that verifies the request's <see cref="T:System.Security.Principal.IPrincipal" />.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.AuthorizeAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Processes requests that fail authorization.</summary>
      <param name="actionContext">The context.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Indicates whether the specified control is authorized.</summary>
      <returns>true if the control is authorized; otherwise, false.</returns>
      <param name="actionContext">The context.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Calls when an action is being authorized.</summary>
      <param name="actionContext">The context.</param>
      <exception cref="T:System.ArgumentNullException">The context parameter is null.</exception>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Roles">
      <summary>Gets or sets the authorized roles. </summary>
      <returns>The roles string. </returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.TypeId">
      <summary>Gets a unique identifier for this attribute.</summary>
      <returns>A unique identifier for this attribute.</returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Users">
      <summary>Gets or sets the authorized users. </summary>
      <returns>The users string. </returns>
    </member>
    <member name="T:System.Web.Http.FromBodyAttribute">
      <summary> An attribute that specifies that an action parameter comes only from the entity body of the incoming <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.FromBodyAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Gets a parameter binding.</summary>
      <returns>The parameter binding.</returns>
      <param name="parameter">The parameter description.</param>
    </member>
    <member name="T:System.Web.Http.FromUriAttribute">
      <summary>An attribute that specifies that an action parameter comes from the URI of the incoming <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.FromUriAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Gets the value provider factories for the model binder.</summary>
      <returns>A collection of <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> objects.</returns>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="T:System.Web.Http.HttpBindNeverAttribute">
      <summary>Represents attributes that specifies that HTTP binding should exclude a property.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindNeverAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpBindNeverAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.Http.HttpBindRequiredAttribute">
      <summary>Represents the required attribute for http binding.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindRequiredAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpBindRequiredAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.Http.HttpConfiguration">
      <summary>Represents a configuration of <see cref="T:System.Web.Http.HttpServer" /> instances. </summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor(System.Web.Http.HttpRouteCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpConfiguration" /> class with an HTTP route collection.</summary>
      <param name="routes">The HTTP route collection to associate with this instance.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.DependencyResolver">
      <summary>Gets or sets the dependency resolver associated with thisinstance.</summary>
      <returns>The dependency resolver.</returns>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the object and, optionally, releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.EnsureInitialized">
      <summary>Invoke the Intializer hook. It is considered immutable from this point forward. It's safe to call this multiple times.</summary>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Filters">
      <summary>Gets the list of filters that apply to all requests served using this <see cref="T:System.Web.Http.HttpConfiguration" /> instance.</summary>
      <returns>The list of filters.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Formatters">
      <summary>Gets the media-type formatters for this instance.</summary>
      <returns>A collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.IncludeErrorDetailPolicy">
      <summary>Gets or sets a value indicating whether error details should be included in error messages.</summary>
      <returns>The <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> value that indicates that error detail policy.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Initializer">
      <summary> Gets or sets the action that will perform final initialization of the <see cref="T:System.Web.Http.HttpConfiguration" /> instance before it is used to process requests. </summary>
      <returns>The action that will perform final initialization of the <see cref="T:System.Web.Http.HttpConfiguration" /> instance.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.MessageHandlers">
      <summary>Gets an ordered list of <see cref="T:System.Net.Http.DelegatingHandler" /> instances to be invoked as an <see cref="T:System.Net.Http.HttpRequestMessage" /> travels up the stack and an <see cref="T:System.Net.Http.HttpResponseMessage" /> travels down in stack in return. </summary>
      <returns>The message handler collection.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.ParameterBindingRules">
      <summary>Gets the collection of rules for how parameters should be bound.</summary>
      <returns>A collection of functions that can produce a parameter binding for a given parameter.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Properties">
      <summary>Gets the properties associated with this instance.</summary>
      <returns>The <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />that contains the properties.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Routes">
      <summary>Gets the <see cref="T:System.Web.Http.HttpRouteCollection" /> associated with this <see cref="T:System.Web.Http.HttpConfiguration" /> instance.</summary>
      <returns>The <see cref="T:System.Web.Http.HttpRouteCollection" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Services">
      <summary>Gets the container of default services associated with this instance.</summary>
      <returns>The <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> that contains the default services for this instance.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.VirtualPathRoot">
      <summary>Gets the root virtual path.</summary>
      <returns>The root virtual path.</returns>
    </member>
    <member name="T:System.Web.Http.HttpConfigurationExtensions">
      <summary>Contains extension methods for the <see cref="T:System.Web.Http.HttpConfiguration" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.BindParameter(System.Web.Http.HttpConfiguration,System.Type,System.Web.Http.ModelBinding.IModelBinder)"></member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IDirectRouteProvider)">
      <summary>Maps the attribute-defined routes for the application.</summary>
      <param name="configuration">The server configuration.</param>
      <param name="directRouteProvider">The <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" /> to use for discovering and building routes.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Maps the attribute-defined routes for the application.</summary>
      <param name="configuration">The server configuration.</param>
      <param name="constraintResolver">The constraint resolver.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IInlineConstraintResolver,System.Web.Http.Routing.IDirectRouteProvider)">
      <summary>Maps the attribute-defined routes for the application.</summary>
      <param name="configuration">The server configuration.</param>
      <param name="constraintResolver">The <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" /> to use for resolving inline constraints.</param>
      <param name="directRouteProvider">The <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" /> to use for discovering and building routes.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.SuppressHostPrincipal(System.Web.Http.HttpConfiguration)"></member>
    <member name="T:System.Web.Http.HttpDeleteAttribute">
      <summary>Specifies that an action supports the DELETE HTTP method.</summary>
    </member>
    <member name="M:System.Web.Http.HttpDeleteAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpDeleteAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.HttpDeleteAttribute.HttpMethods">
      <summary>Gets the http methods that correspond to this attribute.</summary>
      <returns>The http methods that correspond to this attribute.</returns>
    </member>
    <member name="T:System.Web.Http.HttpError">
      <summary>Defines a serializable container for storing error information. This information is stored  as key/value pairs. The dictionary keys to look up standard error information are available on the <see cref="T:System.Web.Http.HttpErrorKeys" /> type.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpError" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Exception,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpError" /> class for <paramref name="exception" />.</summary>
      <param name="exception">The exception to use for error information.</param>
      <param name="includeErrorDetail">true to include the exception information in the error; false otherwise</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpError" /> class containing error message <paramref name="message" />.</summary>
      <param name="message">The error message to associate with this instance.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpError" /> class for <paramref name="modelState" />.</summary>
      <param name="modelState">The invalid model state to use for error information.</param>
      <param name="includeErrorDetail">true to include exception messages in the error; false otherwise</param>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionMessage">
      <summary>Gets or sets the message of the <see cref="T:System.Exception" /> if available.</summary>
      <returns>The message of the <see cref="T:System.Exception" /> if available.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionType">
      <summary>Gets or sets the type of the <see cref="T:System.Exception" /> if available.</summary>
      <returns>The type of the <see cref="T:System.Exception" /> if available.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.GetPropertyValue``1(System.String)">
      <summary>Gets a particular property value from this error instance.</summary>
      <returns>A particular property value from this error instance.</returns>
      <param name="key">The name of the error property.</param>
      <typeparam name="TValue">The type of the property.</typeparam>
    </member>
    <member name="P:System.Web.Http.HttpError.InnerException">
      <summary>Gets the inner <see cref="T:System.Exception" /> associated with this instance if available.</summary>
      <returns>The inner <see cref="T:System.Exception" /> associated with this instance if available.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.Message">
      <summary>Gets or sets the high-level, user-visible message explaining the cause of the error. Information carried in this field should be considered public in that it will go over the wire regardless of the <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" />. As a result care should be taken not to disclose sensitive information about the server or the application.</summary>
      <returns>The high-level, user-visible message explaining the cause of the error. Information carried in this field should be considered public in that it will go over the wire regardless of the <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" />. As a result care should be taken not to disclose sensitive information about the server or the application.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.MessageDetail">
      <summary>Gets or sets a detailed description of the error intended for the developer to understand exactly what failed.</summary>
      <returns>A detailed description of the error intended for the developer to understand exactly what failed.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.ModelState">
      <summary>Gets the <see cref="P:System.Web.Http.HttpError.ModelState" /> containing information about the errors that occurred during model binding.</summary>
      <returns>The <see cref="P:System.Web.Http.HttpError.ModelState" /> containing information about the errors that occurred during model binding.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.StackTrace">
      <summary>Gets or sets the stack trace information associated with this instance if available.</summary>
      <returns>The stack trace information associated with this instance if available.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>This method is reserved and should not be used.</summary>
      <returns>Always returns null.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Generates an <see cref="T:System.Web.Http.HttpError" /> instance from its XML representation.</summary>
      <param name="reader">The XmlReader stream from which the object is deserialized.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Converts an <see cref="T:System.Web.Http.HttpError" /> instance into its XML representation.</summary>
      <param name="writer">The XmlWriter stream to which the object is serialized.</param>
    </member>
    <member name="T:System.Web.Http.HttpErrorKeys">
      <summary> Provides keys to look up error information stored in the <see cref="T:System.Web.Http.HttpError" /> dictionary. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ErrorCodeKey">
      <summary> Provides a key for the ErrorCode. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionMessageKey">
      <summary> Provides a key for the ExceptionMessage. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionTypeKey">
      <summary> Provides a key for the ExceptionType. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.InnerExceptionKey">
      <summary> Provides a key for the InnerException. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageDetailKey">
      <summary> Provides a key for the MessageDetail. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageKey">
      <summary> Provides a key for the Message. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageLanguageKey">
      <summary> Provides a key for the MessageLanguage. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ModelStateKey">
      <summary> Provides a key for the ModelState. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.StackTraceKey">
      <summary> Provides a key for the StackTrace. </summary>
    </member>
    <member name="T:System.Web.Http.HttpGetAttribute">
      <summary>Specifies that an action supports the GET HTTP method.</summary>
    </member>
    <member name="M:System.Web.Http.HttpGetAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpGetAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.HttpGetAttribute.HttpMethods">
      <summary>Gets the http methods that correspond to this attribute.</summary>
      <returns>The http methods that correspond to this attribute.</returns>
    </member>
    <member name="T:System.Web.Http.HttpHeadAttribute">
      <summary> Specifies that an action supports the HEAD HTTP method. </summary>
    </member>
    <member name="M:System.Web.Http.HttpHeadAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpHeadAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.HttpHeadAttribute.HttpMethods">
      <summary>Gets the http methods that correspond to this attribute.</summary>
      <returns>The http methods that correspond to this attribute.</returns>
    </member>
    <member name="T:System.Web.Http.HttpOptionsAttribute">
      <summary>Represents an attribute that is used to restrict an HTTP method so that the method handles only HTTP OPTIONS requests.</summary>
    </member>
    <member name="M:System.Web.Http.HttpOptionsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpOptionsAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.HttpOptionsAttribute.HttpMethods">
      <summary>Gets the http methods that correspond to this attribute.</summary>
      <returns>The http methods that correspond to this attribute.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPatchAttribute">
      <summary> Specifies that an action supports the PATCH HTTP method. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPatchAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpPatchAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPatchAttribute.HttpMethods">
      <summary>Gets the http methods that correspond to this attribute.</summary>
      <returns>The http methods that correspond to this attribute.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPostAttribute">
      <summary>Specifies that an action supports the POST HTTP method. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPostAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpPostAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPostAttribute.HttpMethods">
      <summary>Gets the http methods that correspond to this attribute.</summary>
      <returns>The http methods that correspond to this attribute.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPutAttribute">
      <summary>Represents an attribute that is used to restrict an HTTP method so that the method handles only HTTP PUT requests.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPutAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpPutAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPutAttribute.HttpMethods">
      <summary>Gets the http methods that correspond to this attribute.</summary>
      <returns>The http methods that correspond to this attribute.</returns>
    </member>
    <member name="T:System.Web.Http.HttpResponseException">
      <summary> An exception that allows for a given <see cref="T:System.Net.Http.HttpResponseMessage" /> to be returned to the client. </summary>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpResponseException" /> class.</summary>
      <param name="response">The HTTP response to return to the client.</param>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.HttpStatusCode)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.HttpResponseException" /> class. </summary>
      <param name="statusCode">The status code of the response.</param>
    </member>
    <member name="P:System.Web.Http.HttpResponseException.Response">
      <summary>Gets the HTTP response to return to the client.</summary>
      <returns>The <see cref="T:System.Net.Http.HttpResponseMessage" /> that represents the HTTP response.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollection">
      <summary>A collection of <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instances.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpRouteCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpRouteCollection" /> class.</summary>
      <param name="virtualPathRoot">The virtual path root.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Add(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Adds an <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance to the collection.</summary>
      <param name="name">The name of the route.</param>
      <param name="route">The <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance to add to the collection.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Clear">
      <summary>Removes all items from  the collection.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Contains(System.Web.Http.Routing.IHttpRoute)">
      <summary>Determines whether the collection contains a specific <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>true if the <see cref="T:System.Web.Http.Routing.IHttpRoute" /> is found in the collection; otherwise, false.</returns>
      <param name="item">The object to locate in the collection.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ContainsKey(System.String)">
      <summary>Determines whether the collection contains an element with the specified key.</summary>
      <returns>true if the collection contains an element with the key; otherwise, false.</returns>
      <param name="name">The key to locate in the collection.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.Routing.IHttpRoute}[],System.Int32)">
      <summary>Copies the <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instances of the collection to an array, starting at a particular array index.</summary>
      <param name="array">The array that is the destination of the elements copied from the collection.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Web.Http.Routing.IHttpRoute[],System.Int32)">
      <summary>Copies the route names and <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instances of the collection to an array, starting at a particular array index.</summary>
      <param name="array">The array that is the destination of the elements copied from the collection.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Count">
      <summary>Gets the number of items in the collection.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Creates an <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance.</summary>
      <returns>The new <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance.</returns>
      <param name="routeTemplate">The route template.</param>
      <param name="defaults">An object that contains the default route parameters.</param>
      <param name="constraints">An object that contains the route constraints.</param>
      <param name="dataTokens">The route data tokens.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)">
      <summary>Creates an <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance.</summary>
      <returns>The new <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance.</returns>
      <param name="routeTemplate">The route template.</param>
      <param name="defaults">An object that contains the default route parameters.</param>
      <param name="constraints">An object that contains the route constraints.</param>
      <param name="dataTokens">The route data tokens.</param>
      <param name="handler">The message handler for the route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Object,System.Object)">
      <summary>Creates an <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance.</summary>
      <returns>The new <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance.</returns>
      <param name="routeTemplate">The route template.</param>
      <param name="defaults">An object that contains the default route parameters.</param>
      <param name="constraints">An object that contains the route constraints.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the object and, optionally, releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Gets the route data for a specified HTTP request.</summary>
      <returns>An<see cref="T:System.Web.Http.Routing.IHttpRouteData" /> instance that represents the route data.</returns>
      <param name="request">The HTTP request.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gets a virtual path.</summary>
      <returns>An <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" /> instance that represents the virtual path.</returns>
      <param name="request">The HTTP request.</param>
      <param name="name">The route name.</param>
      <param name="values">The route values.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Insert(System.Int32,System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Inserts an <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance into the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="name">The route name.</param>
      <param name="value">The <see cref="T:System.Web.Http.Routing.IHttpRoute" /> to insert. The value cannot be null.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The  <see cref="T:System.Web.Http.Routing.IHttpRoute" /> at the specified index.</returns>
      <param name="index">The index.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.String)">
      <summary>Gets or sets the element with the specified route name.</summary>
      <returns>The  <see cref="T:System.Web.Http.Routing.IHttpRoute" /> at the specified index.</returns>
      <param name="name">The route name.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.OnGetEnumerator">
      <summary>Called internally to get the enumerator for the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Remove(System.String)">
      <summary>Removes an <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance from the collection.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This method also returns false if <paramref name="name" /> was not found in the collection.</returns>
      <param name="name">The name of the route to remove.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Add(System.Web.Http.Routing.IHttpRoute)">
      <summary>Adds an item to the collection.</summary>
      <param name="route">The object to add to the collection.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Remove(System.Web.Http.Routing.IHttpRoute)">
      <summary>Removes the first occurrence of a specific object from the collection.</summary>
      <returns>true if <paramref name="route" /> was successfully removed from the collection; otherwise, false. This method also returns false if <paramref name="route" /> is not found in the original collection.</returns>
      <param name="route">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.TryGetValue(System.String,System.Web.Http.Routing.IHttpRoute@)">
      <summary>Gets the <see cref="T:System.Web.Http.Routing.IHttpRoute" /> with the specified route name.</summary>
      <returns>true if the collection contains an element with the specified name; otherwise, false.</returns>
      <param name="name">The route name.</param>
      <param name="route">When this method returns, contains the <see cref="T:System.Web.Http.Routing.IHttpRoute" /> instance, if the route name is found; otherwise, null. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ValidateConstraint(System.String,System.String,System.Object)">
      <summary>Validates that a constraint is valid for an <see cref="T:System.Web.Http.Routing.IHttpRoute" /> created by a call to the <see cref="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)" /> method.</summary>
      <param name="routeTemplate">The route template.</param>
      <param name="name">The constraint name.</param>
      <param name="constraint">The constraint object.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.VirtualPathRoot">
      <summary>Gets the virtual path root.</summary>
      <returns>The virtual path root.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollectionExtensions">
      <summary> Extension methods for <see cref="T:System.Web.Http.HttpRouteCollection" /></summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.IgnoreRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Ignores the specified route.</summary>
      <returns>Returns <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routes">A collection of routes for the application.</param>
      <param name="routeName">The name of the route to ignore.</param>
      <param name="routeTemplate">The route template for the route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.IgnoreRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Ignores the specified route.</summary>
      <returns>Returns <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routes">A collection of routes for the application.</param>
      <param name="routeName">The name of the route to ignore.</param>
      <param name="routeTemplate">The route template for the route.</param>
      <param name="constraints">A set of expressions that specify values for the route template.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpBatchRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Web.Http.Batch.HttpBatchHandler)">
      <summary> Maps the specified route for handling HTTP batch requests. </summary>
      <param name="routes">A collection of routes for the application.</param>
      <param name="routeName">The name of the route to map.</param>
      <param name="routeTemplate">The route template for the route.</param>
      <param name="batchHandler">The <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> for handling batch requests.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Maps the specified route template.</summary>
      <returns>A reference to the mapped route.</returns>
      <param name="routes">A collection of routes for the application.</param>
      <param name="name">The name of the route to map.</param>
      <param name="routeTemplate">The route template for the route.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Maps the specified route template and sets default route values.</summary>
      <returns>A reference to the mapped route.</returns>
      <param name="routes">A collection of routes for the application.</param>
      <param name="name">The name of the route to map.</param>
      <param name="routeTemplate">The route template for the route.</param>
      <param name="defaults">An object that contains default route values.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Maps the specified route template and sets default route values and constraints.</summary>
      <returns>A reference to the mapped route.</returns>
      <param name="routes">A collection of routes for the application.</param>
      <param name="name">The name of the route to map.</param>
      <param name="routeTemplate">The route template for the route.</param>
      <param name="defaults">An object that contains default route values.</param>
      <param name="constraints">A set of expressions that specify values for <paramref name="routeTemplate" />.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary>Maps the specified route template and sets default route values, constraints, and end-point message handler.</summary>
      <returns>A reference to the mapped route.</returns>
      <param name="routes">A collection of routes for the application.</param>
      <param name="name">The name of the route to map.</param>
      <param name="routeTemplate">The route template for the route.</param>
      <param name="defaults">An object that contains default route values.</param>
      <param name="constraints">A set of expressions that specify values for <paramref name="routeTemplate" />.</param>
      <param name="handler">The handler to which the request will be dispatched.</param>
    </member>
    <member name="T:System.Web.Http.HttpServer">
      <summary> Defines an implementation of an <see cref="T:System.Net.Http.HttpMessageHandler" /> which dispatches an  incoming <see cref="T:System.Net.Http.HttpRequestMessage" /> and creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> as a result. </summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpServer" /> class, using the default configuration and dispatcher.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.HttpServer" /> class with a specified dispatcher. </summary>
      <param name="dispatcher">The HTTP dispatcher that will handle incoming requests.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpServer" /> class with a specified configuration.</summary>
      <param name="configuration">The <see cref="T:System.Web.Http.HttpConfiguration" /> used to configure this instance.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.HttpServer" /> class with a specified configuration and dispatcher.</summary>
      <param name="configuration">The <see cref="T:System.Web.Http.HttpConfiguration" /> used to configure this instance.</param>
      <param name="dispatcher">The HTTP dispatcher that will handle incoming requests.</param>
    </member>
    <member name="P:System.Web.Http.HttpServer.Configuration">
      <summary>Gets the <see cref="T:System.Web.Http.HttpConfiguration" /> used to configure this instance.</summary>
      <returns>The <see cref="T:System.Web.Http.HttpConfiguration" /> used to configure this instance.</returns>
    </member>
    <member name="P:System.Web.Http.HttpServer.Dispatcher">
      <summary>Gets the HTTP dispatcher that handles incoming requests.</summary>
      <returns>The HTTP dispatcher that handles incoming requests.</returns>
    </member>
    <member name="M:System.Web.Http.HttpServer.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the object and, optionally, releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.Initialize">
      <summary>Prepares the server for operation.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Dispatches an incoming <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns> A task representing the asynchronous operation.</returns>
      <param name="request">The request to dispatch.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.Http.IHttpActionResult">
      <summary>Defines a command that asynchronously creates an <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Web.Http.IHttpActionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Creates an <see cref="T:System.Net.Http.HttpResponseMessage" /> asynchronously.</summary>
      <returns>A task that, when completed, contains the <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.Http.IncludeErrorDetailPolicy">
      <summary>Specifies whether error details, such as exception messages and stack traces, should be included in error messages.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Always">
      <summary>Always include error details.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Default">
      <summary>Use the default behavior for the host environment. For ASP.NET hosting, use the value from the customErrors element in the Web.config file. For self-hosting, use the value <see cref="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly" />.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly">
      <summary>Only include error details when responding to a local request. </summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Never">
      <summary>Never include error details. </summary>
    </member>
    <member name="T:System.Web.Http.NonActionAttribute">
      <summary>Represents an attribute that is used to indicate that a controller method is not an action method.</summary>
    </member>
    <member name="M:System.Web.Http.NonActionAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.NonActionAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.Http.OverrideActionFiltersAttribute">
      <summary>Represents a filter attribute that overrides action filters defined at a higher level.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideActionFiltersAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OverrideActionFiltersAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.AllowMultiple">
      <summary>Gets a value indicating whether the action filter allows multiple attribute.</summary>
      <returns>true if the action filter allows multiple attribute; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Gets the type of filters to override.</summary>
      <returns>The type of filters to override.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideAuthenticationAttribute">
      <summary>Represents a filter attribute that overrides authentication filters defined at a higher level.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthenticationAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.OverrideAuthorizationAttribute">
      <summary>Represents a filter attribute that overrides authorization filters defined at a higher level.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthorizationAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OverrideAuthorizationAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.AllowMultiple">
      <summary>Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</summary>
      <returns>true if more than one instance is allowed to be specified; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Gets the type to filters override attributes.</summary>
      <returns>The type to filters override attributes.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideExceptionFiltersAttribute">
      <summary>Represents a filter attribute that overrides exception filters defined at a higher level.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideExceptionFiltersAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.ParameterBindingAttribute">
      <summary> Attribute on a parameter or type that produces a <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.  If the attribute is on a type-declaration, then it's as if that attribute is present on all action parameters  of that type. </summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ParameterBindingAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Gets the parameter binding.</summary>
      <returns>The parameter binding.</returns>
      <param name="parameter">The parameter description.</param>
    </member>
    <member name="T:System.Web.Http.RouteAttribute">
      <summary>Place on an action to expose it directly via a route.</summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.RouteAttribute" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.RouteAttribute" /> class. </summary>
      <param name="template">The route template describing the URI pattern to match against.</param>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Name">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Order">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.System#Web#Http#Routing#IDirectRouteFactory#CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)"></member>
    <member name="P:System.Web.Http.RouteAttribute.Template">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.RouteParameter">
      <summary>The <see cref="T:System.Web.Http.RouteParameter" /> class can be used to indicate properties about a route parameter (the literals and placeholders  located within segments of a <see cref="M:IHttpRoute.RouteTemplate" />).  It can for example be used to indicate that a route parameter is optional. </summary>
    </member>
    <member name="F:System.Web.Http.RouteParameter.Optional">
      <summary>An optional parameter.</summary>
    </member>
    <member name="M:System.Web.Http.RouteParameter.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="T:System.Web.Http.RoutePrefixAttribute">
      <summary> Annotates a controller with a route prefix that applies to all actions within the controller. </summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.RoutePrefixAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor(System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.RoutePrefixAttribute" /> class. </summary>
      <param name="prefix">The route prefix for the controller.</param>
    </member>
    <member name="P:System.Web.Http.RoutePrefixAttribute.Prefix">
      <summary> Gets the route prefix. </summary>
    </member>
    <member name="T:System.Web.Http.ServicesExtensions">
      <summary>Provides type-safe accessors for services obtained from a <see cref="T:System.Web.Http.Controllers.ServicesContainer" />object.</summary>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionInvoker(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /> instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /> instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionValueBinder(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /> instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetApiExplorer(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Description.IApiExplorer" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Description.IApiExplorer" /> instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetAssembliesResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetBodyModelValidator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Validation.IBodyModelValidator" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Validation.IBodyModelValidator" /> instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetContentNegotiator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Net.Http.Formatting.IContentNegotiator" /> service.</summary>
      <returns>Returns an <see cref="T:System.Net.Http.Formatting.IContentNegotiator" /> instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetDocumentationProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Description.IDocumentationProvider" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Description.IDocumentationProvider" /> instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetExceptionHandler(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Returns the registered unhandled exception handler, if any.</summary>
      <returns>The registered unhandled exception hander, if present; otherwise, null.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetExceptionLoggers(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Returns the collection of registered unhandled exception loggers.</summary>
      <returns>The collection of registered unhandled exception loggers.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetFilterProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Filters.IFilterProvider" /> collection.</summary>
      <returns>Returns a collection of<see cref="T:System.Web.Http.Filters.IFilterProvider" /> objects.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHostBufferPolicySelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerActivator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> instance, or null if no instance was registered.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerTypeResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelBinderProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /> collection.</summary>
      <returns>Returns a collection of <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /> objects.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelMetadataProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> service.</summary>
      <returns>Returns an <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelValidatorProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> collection.</summary>
      <returns>Returns a collection of<see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />objects.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceManager(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Tracing.ITraceManager" /> service.</summary>
      <returns>Returns an<see cref="T:System.Web.Http.Tracing.ITraceManager" />instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceWriter(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.Tracing.ITraceWriter" />service.</summary>
      <returns>Returns an<see cref="T:System.Web.Http.Tracing.ITraceWriter" />instance.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetValueProviderFactories(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets the <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> collection.</summary>
      <returns>Returns a collection of <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> objects.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="T:System.Web.Http.SingleResult">
      <summary>Represents an <see cref="T:System.Linq.IQueryable" /> containing zero or one entities. Use together with an [EnableQuery] from the System.Web.Http.OData or System.Web.OData namespace.</summary>
    </member>
    <member name="M:System.Web.Http.SingleResult.#ctor(System.Linq.IQueryable)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.SingleResult" /> class.</summary>
      <param name="queryable">The <see cref="T:System.Linq.IQueryable" /> containing zero or one entities.</param>
    </member>
    <member name="M:System.Web.Http.SingleResult.Create``1(System.Linq.IQueryable{``0})">
      <summary>Creates a <see cref="T:System.Web.Http.SingleResult`1" /> from an <see cref="T:System.Linq.IQueryable`1" />. A helper method to instantiate a <see cref="T:System.Web.Http.SingleResult`1" /> object without having to explicitly specify the type <paramref name="T" />.</summary>
      <returns>The created <see cref="T:System.Web.Http.SingleResult`1" />.</returns>
      <param name="queryable">The <see cref="T:System.Linq.IQueryable`1" /> containing zero or one entities.</param>
      <typeparam name="T">The type of the data in the data source.</typeparam>
    </member>
    <member name="P:System.Web.Http.SingleResult.Queryable">
      <summary>The <see cref="T:System.Linq.IQueryable" /> containing zero or one entities.</summary>
    </member>
    <member name="T:System.Web.Http.SingleResult`1">
      <summary>Represents an <see cref="T:System.Linq.IQueryable`1" /> containing zero or one entities. Use together with an [EnableQuery] from the System.Web.Http.OData or System.Web.OData namespace.</summary>
      <typeparam name="T">The type of the data in the data source.</typeparam>
    </member>
    <member name="M:System.Web.Http.SingleResult`1.#ctor(System.Linq.IQueryable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.SingleResult`1" /> class.</summary>
      <param name="queryable">The <see cref="T:System.Linq.IQueryable`1" /> containing zero or one entities.</param>
    </member>
    <member name="P:System.Web.Http.SingleResult`1.Queryable">
      <summary>The <see cref="T:System.Linq.IQueryable`1" /> containing zero or one entities.</summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchExecutionOrder">
      <summary> Defines the order of execution for batch requests. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.NonSequential">
      <summary> Executes the batch requests non-sequentially. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.Sequential">
      <summary> Executes the batch requests sequentially. </summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchHttpRequestMessageExtensions">
      <summary> Provides extension methods for the <see cref="T:System.Net.Http.HttpRequestMessage" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.Batch.BatchHttpRequestMessageExtensions.CopyBatchRequestProperties(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpRequestMessage)">
      <summary> Copies the properties from another <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="subRequest">The sub-request.</param>
      <param name="batchRequest">The batch request that contains the properties to copy.</param>
    </member>
    <member name="T:System.Web.Http.Batch.DefaultHttpBatchHandler">
      <summary>Represents the default implementation of <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> that encodes the HTTP request/response messages as MIME multipart.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Batch.DefaultHttpBatchHandler" /> class.</summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IList{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Creates the batch response message.</summary>
      <returns>The batch response message.</returns>
      <param name="responses">The responses for the batch requests.</param>
      <param name="request">The original request containing all the batch requests.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage},System.Threading.CancellationToken)">
      <summary>Executes the batch request messages.</summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpResponseMessage" /> for the batch requests.</returns>
      <param name="requests">The collection of batch request messages.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecutionOrder">
      <summary>Gets or sets the execution order for the batch requests. The default execution order is sequential.</summary>
      <returns>The execution order for the batch requests. The default execution order is sequential.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Converts the incoming batch request into a collection of request messages.</summary>
      <returns>A collection of <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The request containing the batch request messages.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Processes the batch requests.</summary>
      <returns>The result of the operation.</returns>
      <param name="request">The batch request.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.SupportedContentTypes">
      <summary>Gets the supported content types for the batch request.</summary>
      <returns>The supported content types for the batch request.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Validates the incoming request that contains the batch request messages.</summary>
      <param name="request">The request containing the batch request messages.</param>
    </member>
    <member name="T:System.Web.Http.Batch.HttpBatchHandler">
      <summary>Defines the abstraction for handling HTTP batch requests.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> class.</summary>
      <param name="httpServer">The <see cref="T:System.Web.Http.HttpServer" /> for handling the individual batch requests.</param>
    </member>
    <member name="P:System.Web.Http.Batch.HttpBatchHandler.Invoker">
      <summary>Gets the invoker to send the batch requests to the <see cref="T:System.Web.Http.HttpServer" />.</summary>
      <returns>The invoker to send the batch requests to the <see cref="T:System.Web.Http.HttpServer" />.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Processes the incoming batch request as a single <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>The batch response.</returns>
      <param name="request">The batch request.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sends the batch handler asynchronously.</summary>
      <returns>The result of the operation.</returns>
      <param name="request">the send request.</param>
      <param name="cancellationToken">The cancelation token.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionInvoker">
      <summary>Invokes the action methods of a controller.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Asynchronously invokes the specified action by using the specified controller context.</summary>
      <returns>The invoked action.</returns>
      <param name="actionContext">The controller context.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionSelector">
      <summary>Represents a reflection based action selector.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Gets the action mappings for the <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>The action mappings.</returns>
      <param name="controllerDescriptor">The information that describes a controller.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Selects an action for the <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>The selected action.</returns>
      <param name="controllerContext">The controller context.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ControllerServices">
      <summary> Represents a container for services that can be specific to a controller.  This shadows the services from its parent <see cref="T:System.Web.Http.Controllers.ServicesContainer" />. A controller can either set a service here, or fall through  to the more global set of services.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.#ctor(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ControllerServices" /> class.</summary>
      <param name="parent">The parent services container.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ClearSingle(System.Type)">
      <summary>Removes a single-instance service from the default services.</summary>
      <param name="serviceType">The type of service.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetService(System.Type)">
      <summary>Gets a service of the specified type.</summary>
      <returns>The first instance of the service, or null if the service is not found.</returns>
      <param name="serviceType">The type of service.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServiceInstances(System.Type)">
      <summary>Gets the list of service objects for a given service type, and validates the service type.</summary>
      <returns>The list of service objects of the specified type.</returns>
      <param name="serviceType">The service type.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServices(System.Type)">
      <summary>Gets the list of service objects for a given service type.</summary>
      <returns>The list of service objects of the specified type, or an empty list if the service is not found.</returns>
      <param name="serviceType">The type of service.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.IsSingleService(System.Type)">
      <summary>Queries whether a service type is single-instance.</summary>
      <returns>true if the service type has at most one instance, or false if the service type supports multiple instances.</returns>
      <param name="serviceType">The service type.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Replaces a single-instance service object.</summary>
      <param name="serviceType">The service type.</param>
      <param name="service">The service object that replaces the previous instance.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionBinding">
      <summary>Describes *how* the binding will happen and does not actually bind.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Controllers.HttpParameterBinding[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> class.</summary>
      <param name="actionDescriptor">The back pointer to the action this binding is for.  </param>
      <param name="bindings">The synchronous bindings for each parameter.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ActionDescriptor">
      <summary>Gets or sets the back pointer to the action this binding is for.  </summary>
      <returns>The back pointer to the action this binding is for.  </returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.ExecuteBindingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executes asynchronously the binding for the given request context.</summary>
      <returns>Task that is signaled when the binding is complete. </returns>
      <param name="actionContext">The action context for the binding. This contains the parameter dictionary that will get populated.</param>
      <param name="cancellationToken">The cancellation token for cancelling the binding operation. Or a binder can also bind a parameter to this.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ParameterBindings">
      <summary>Gets or sets the synchronous bindings for each parameter. </summary>
      <returns>The synchronous bindings for each parameter.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContext">
      <summary>Contains information for the executing action.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> class. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor(System.Web.Http.Controllers.HttpControllerContext,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> class.</summary>
      <param name="controllerContext">The controller context.</param>
      <param name="actionDescriptor">The action descriptor.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionArguments">
      <summary>Gets a list of action arguments.</summary>
      <returns>A list of action arguments.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionDescriptor">
      <summary>Gets or sets the action descriptor for the action context.</summary>
      <returns>The action descriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ControllerContext">
      <summary>Gets or sets the controller context.</summary>
      <returns>The controller context.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ModelState">
      <summary>Gets the model state dictionary for the context.</summary>
      <returns>The model state dictionary.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Request">
      <summary>Gets the request message for the action context.</summary>
      <returns>The request message for the action context.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.RequestContext">
      <summary>Gets the current request context.</summary>
      <returns>The current request context.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Response">
      <summary>Gets or sets the response message for the action context.</summary>
      <returns>The response message for the action context.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContextExtensions">
      <summary>Contains extension methods for <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetMetadataProvider(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidatorProviders(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidators(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Metadata.ModelMetadata)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.TryBindStrongModel``1(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.String,System.Web.Http.Metadata.ModelMetadataProvider,``0@)">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionDescriptor">
      <summary>Provides information about the action methods.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> class with specified information that describes the controller of the action..</summary>
      <param name="controllerDescriptor">The information that describes the controller of the action.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionBinding">
      <summary>Gets or sets the binding that describes the action.</summary>
      <returns>The binding that describes the action.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionName">
      <summary>Gets the name of the action.</summary>
      <returns>The name of the action.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Configuration">
      <summary>Gets or sets the action configuration.</summary>
      <returns>The action configuration.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ControllerDescriptor">
      <summary>Gets the information that describes the controller of the action.</summary>
      <returns>The information that describes the controller of the action.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Executes the described action and returns a <see cref="T:System.Threading.Tasks.Task`1" /> that once completed will contain the return value of the action.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> that once completed will contain the return value of the action.</returns>
      <param name="controllerContext">The controller context.</param>
      <param name="arguments">A list of arguments.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1">
      <summary>Returns the custom attributes associated with the action descriptor.</summary>
      <returns>The custom attributes associated with the action descriptor.</returns>
      <typeparam name="T">The action descriptor.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary>Gets the custom attributes for the action.</summary>
      <returns>The collection of custom attributes applied to this action.</returns>
      <param name="inherit">true to search this action's inheritance chain to find the attributes; otherwise, false.</param>
      <typeparam name="T">The type of attribute to search for.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilterPipeline">
      <summary>Retrieves the filters for the given configuration and action.</summary>
      <returns>The filters for the given configuration and action.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilters">
      <summary>Retrieves the filters for the action descriptor.</summary>
      <returns>The filters for the action descriptor.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetParameters">
      <summary>Retrieves the parameters for the action descriptor.</summary>
      <returns>The parameters for the action descriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Properties">
      <summary>Gets the properties associated with this instance.</summary>
      <returns>The properties associated with this instance.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ResultConverter">
      <summary>Gets the converter for correctly transforming the result of calling ExecuteAsync(HttpControllerContext, IDictionaryString, Object)" into an instance of <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>The action result converter.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ReturnType">
      <summary>Gets the return type of the descriptor.</summary>
      <returns>The return type of the descriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.SupportedHttpMethods">
      <summary>Gets the collection of supported HTTP methods for the descriptor.</summary>
      <returns>The collection of supported HTTP methods for the descriptor.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerContext">
      <summary>Contains information for a single HTTP operation.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.Controllers.HttpRequestContext,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Controllers.IHttpController)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> class.</summary>
      <param name="requestContext">The request context.</param>
      <param name="request">The HTTP request.</param>
      <param name="controllerDescriptor">The controller descriptor.</param>
      <param name="controller">The controller.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IHttpRouteData,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> class.</summary>
      <param name="configuration">The configuration.</param>
      <param name="routeData">The route data.</param>
      <param name="request">The request.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Configuration">
      <summary>Gets or sets the configuration.</summary>
      <returns>The configuration.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Controller">
      <summary>Gets or sets the HTTP controller.</summary>
      <returns>The HTTP controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.ControllerDescriptor">
      <summary>Gets or sets the controller descriptor.</summary>
      <returns>The controller descriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Request">
      <summary>Gets or sets the request.</summary>
      <returns>The request.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RequestContext">
      <summary>Gets or sets the request context.</summary>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RouteData">
      <summary>Gets or sets the route data.</summary>
      <returns>The route data.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerDescriptor">
      <summary>Represents information that describes the HTTP controller.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor(System.Web.Http.HttpConfiguration,System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> class.</summary>
      <param name="configuration">The configuration.</param>
      <param name="controllerName">The controller name.</param>
      <param name="controllerType">The controller type.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Configuration">
      <summary>Gets or sets the configurations associated with the controller.</summary>
      <returns>The configurations associated with the controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerName">
      <summary>Gets or sets the name of the controller.</summary>
      <returns>The name of the controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerType">
      <summary>Gets or sets the type of the controller.</summary>
      <returns>The type of the controller.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(System.Net.Http.HttpRequestMessage)">
      <summary>Creates a controller instance for the given <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>The created controller instance.</returns>
      <param name="request">The request message.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1">
      <summary>Retrieves a collection of custom attributes of the controller.</summary>
      <returns>A collection of custom attributes.</returns>
      <typeparam name="T">The type of the object.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary> Returns a collection of attributes that can be assigned to &lt;typeparamref name="T" /&gt; for this descriptor's controller. </summary>
      <returns>A collection of attributes associated with this controller.</returns>
      <param name="inherit">true to search this controller's inheritance chain to find the attributes; otherwise, false.</param>
      <typeparam name="T">Used to filter the collection of attributes. Use a value of <see cref="T:System.Object" /> to retrieve all attributes.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetFilters">
      <summary>Returns a collection of filters associated with the controller.</summary>
      <returns>A collection of filters associated with the controller.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Properties">
      <summary>Gets the properties associated with this instance.</summary>
      <returns>The properties associated with this instance.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerSettings">
      <summary>Contains settings for an HTTP controller.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerSettings.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpControllerSettings" /> class.</summary>
      <param name="configuration">A configuration object that is used to initialize the instance.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Formatters">
      <summary>Gets the collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances for the controller.</summary>
      <returns>The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.ParameterBindingRules">
      <summary>Gets the collection of parameter bindingfunctions for for the controller.</summary>
      <returns>The collection of parameter binding functions.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Services">
      <summary>Gets the collection of service instances for the controller.</summary>
      <returns>The collection of service instances.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterBinding">
      <summary> Describes how a parameter is bound. The binding should be static (based purely on the descriptor) and  can be shared across requests.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> class.</summary>
      <param name="descriptor">An <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> that describes the parameters.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.Descriptor">
      <summary>Gets the <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> that was used to initialize this instance.</summary>
      <returns>The <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> instance.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.ErrorMessage">
      <summary>If the binding is invalid, gets an error message that describes the binding error.</summary>
      <returns>An error message. If the binding was successful, the value is null.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Asynchronously executes the binding for the given request.</summary>
      <returns>A task object representing the asynchronous operation.</returns>
      <param name="metadataProvider">Metadata provider to use for validation.</param>
      <param name="actionContext">The action context for the binding. The action context contains the parameter dictionary that will get populated with the parameter.</param>
      <param name="cancellationToken">Cancellation token for cancelling the binding operation.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.GetValue(System.Web.Http.Controllers.HttpActionContext)">
      <summary> Gets the parameter value from argument dictionary of the action context.</summary>
      <returns>The value for this parameter in the given action context, or null if the parameter has not yet been set.</returns>
      <param name="actionContext">The action context.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.IsValid">
      <summary>Gets a value that indicates whether the binding was successful.</summary>
      <returns>true if the binding was successful; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.SetValue(System.Web.Http.Controllers.HttpActionContext,System.Object)">
      <summary>Sets the result of this parameter binding in the argument dictionary of the action context.  </summary>
      <param name="actionContext">The action context.</param>
      <param name="value">The parameter value.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.WillReadBody">
      <summary>Returns a value indicating whether this <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> instance will read the entity body of the HTTP message.</summary>
      <returns>true if this <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> will read the entity body; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterDescriptor">
      <summary>Represents the HTTP parameter descriptor.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> class.</summary>
      <param name="actionDescriptor">The action descriptor.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ActionDescriptor">
      <summary>Gets or sets the action descriptor.</summary>
      <returns>The action descriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Configuration">
      <summary>Gets or sets the <see cref="T:System.Web.Http.HttpConfiguration" /> for the <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <returns>The <see cref="T:System.Web.Http.HttpConfiguration" /> for the <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.DefaultValue">
      <summary>Gets the default value of the parameter.</summary>
      <returns>The default value of the parameter.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Retrieves a collection of the custom attributes from the parameter.</summary>
      <returns>A collection of the custom attributes from the parameter.</returns>
      <typeparam name="T">The type of the custom attributes.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.IsOptional">
      <summary>Gets a value that indicates whether the parameter is optional.</summary>
      <returns>true if the parameter is optional; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterBinderAttribute">
      <summary>Gets or sets the parameter binding attribute.</summary>
      <returns>The parameter binding attribute.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterName">
      <summary>Gets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterType">
      <summary>Gets the type of the parameter.</summary>
      <returns>The type of the parameter.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Prefix">
      <summary>Gets the prefix of this parameter.</summary>
      <returns>The prefix of this parameter.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Properties">
      <summary>Gets the properties of this parameter.</summary>
      <returns>The properties of this parameter.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpRequestContext">
      <summary>Represents the context associated with a request.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpRequestContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.HttpRequestContext" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.ClientCertificate">
      <summary>Gets or sets the client certificate.</summary>
      <returns>Returns <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Configuration">
      <summary>Gets or sets the configuration.</summary>
      <returns>Returns <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IncludeErrorDetail">
      <summary>Gets or sets a value indicating whether error details, such as exception messages and stack traces, should be included in the response for this request.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IsLocal">
      <summary>Gets or sets a value indicating whether the request originates from a local address.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Principal">
      <summary>.Gets or sets the principal</summary>
      <returns>Returns <see cref="T:System.Security.Principal.IPrincipal" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.RouteData">
      <summary>Gets or sets the route data.</summary>
      <returns>Returns <see cref="T:System.Web.Http.Routing.IHttpRouteData" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Url">
      <summary>Gets or sets the factory used to generate URLs to other APIs.</summary>
      <returns>Returns <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.VirtualPathRoot">
      <summary>Gets or sets the virtual path root.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionHttpMethodProvider"></member>
    <member name="P:System.Web.Http.Controllers.IActionHttpMethodProvider.HttpMethods"></member>
    <member name="T:System.Web.Http.Controllers.IActionResultConverter">
      <summary> A contract for a conversion routine that can take the result of an action returned from &lt;see cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" /&gt; and convert it to an instance of <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converts the specified <see cref="T:System.Web.Http.Controllers.IActionResultConverter" /> object to another object.</summary>
      <returns>The converted object.</returns>
      <param name="controllerContext">The controller context.</param>
      <param name="actionResult">The action result.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionValueBinder">
      <summary>Defines the method for retrieval of action binding associated with parameter value.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Gets the <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
      <returns>A <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> object.</returns>
      <param name="actionDescriptor">The action descriptor.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IControllerConfiguration">
      <summary> If a controller is decorated with an attribute with this interface, then it gets invoked to initialize the controller settings.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IControllerConfiguration.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Callback invoked to set per-controller overrides for this controllerDescriptor. </summary>
      <param name="controllerSettings">The controller settings to initialize.</param>
      <param name="controllerDescriptor">The controller descriptor. Note that the <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> can be associated with the derived controller type given that <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> is inherited.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionInvoker">
      <summary>Contains method that is used to invoke HTTP operation.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executes asynchronously the HTTP operation.</summary>
      <returns>The newly started task.</returns>
      <param name="actionContext">The execution context.</param>
      <param name="cancellationToken">The cancellation token assigned for the HTTP operation.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionSelector">
      <summary>Contains the logic for selecting an action method.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Returns a map, keyed by action string, of all <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> that the selector can select.  This is primarily called by <see cref="T:System.Web.Http.Description.IApiExplorer" /> to discover all the possible actions in the controller.</summary>
      <returns>A map of <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> that the selector can select, or null if the selector does not have a well-defined mapping of <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</returns>
      <param name="controllerDescriptor">The controller descriptor.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Selects the action for the controller.</summary>
      <returns>The action for the controller.</returns>
      <param name="controllerContext">The context of the controller.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpController">
      <summary>Represents an HTTP controller.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Executes the controller for synchronization.</summary>
      <returns>The controller.</returns>
      <param name="controllerContext">The current context for a test controller.</param>
      <param name="cancellationToken">The notification that cancels the operation.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ParameterBindingExtensions">
      <summary>Defines extension methods for <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindAsError(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Binds parameter that results as an error. </summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
      <param name="message">The error message that describes the reason for fail bind.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithAttribute(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ParameterBindingAttribute)">
      <summary>Bind the parameter as if it had the given attribute on the declaration.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter to provide binding for.</param>
      <param name="attribute">The attribute that describes the binding.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Binds parameter by parsing the HTTP body content.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Binds parameter by parsing the HTTP body content.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
      <param name="formatters">The list of formatters which provides selection of an appropriate formatter for serializing the parameter into object.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Binds parameter by parsing the HTTP body content.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
      <param name="formatters">The list of formatters which provides selection of an appropriate formatter for serializing the parameter into object.</param>
      <param name="bodyModelValidator">The body model validator used to validate the parameter.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Net.Http.Formatting.MediaTypeFormatter[])">
      <summary>Binds parameter by parsing the HTTP body content.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
      <param name="formatters">The list of formatters which provides selection of an appropriate formatter for serializing the parameter into object.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Binds parameter by parsing the query string.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Binds parameter by parsing the query string.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
      <param name="valueProviderFactories">The value provider factories which provide query string parameter data.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Binds parameter by parsing the query string.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
      <param name="binder">The model binder used to assemble the parameter into an object.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Binds parameter by parsing the query string.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
      <param name="binder">The model binder used to assemble the parameter into an object.</param>
      <param name="valueProviderFactories">The value provider factories which provide query string parameter data.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ValueProviders.ValueProviderFactory[])">
      <summary>Binds parameter by parsing the query string.</summary>
      <returns>The HTTP parameter binding object.</returns>
      <param name="parameter">The parameter descriptor that describes the parameter to bind.</param>
      <param name="valueProviderFactories">The value provider factories which provide query string parameter data.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor">
      <summary>Represents a reflected synchronous or asynchronous action method.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor,System.Reflection.MethodInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" /> class with the specified descriptor and method details..</summary>
      <param name="controllerDescriptor">The controller descriptor.</param>
      <param name="methodInfo">The action-method information.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionName">
      <summary>Gets the name of the action.</summary>
      <returns>The name of the action.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.Equals(System.Object)"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Executes the described action and returns a <see cref="T:System.Threading.Tasks.Task`1" /> that once completed will contain the return value of the action.</summary>
      <returns>A [T:System.Threading.Tasks.Task`1"] that once completed will contain the return value of the action.</returns>
      <param name="controllerContext">The context.</param>
      <param name="arguments">The arguments.</param>
      <param name="cancellationToken">A cancellation token to cancel the action.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary>Returns an array of custom attributes defined for this member, identified by type.</summary>
      <returns>An array of custom attributes or an empty array if no custom attributes exist.</returns>
      <param name="inherit">true to search this action's inheritance chain to find the attributes; otherwise, false.</param>
      <typeparam name="T">The type of the custom attributes.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetFilters">
      <summary>Retrieves information about action filters.</summary>
      <returns>The filter information.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetHashCode"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetParameters">
      <summary>Retrieves the parameters of the action method.</summary>
      <returns>The parameters of the action method.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.MethodInfo">
      <summary>Gets or sets the action-method information.</summary>
      <returns>The action-method information.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ReturnType">
      <summary>Gets the return type of this method.</summary>
      <returns>The return type of this method.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.SupportedHttpMethods">
      <summary>Gets or sets the supported http methods.</summary>
      <returns>The supported http methods.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor">
      <summary>Represents the reflected HTTP parameter descriptor.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Reflection.ParameterInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" /> class.</summary>
      <param name="actionDescriptor">The action descriptor.</param>
      <param name="parameterInfo">The parameter information.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.DefaultValue">
      <summary>Gets the default value for the parameter.</summary>
      <returns>The default value for the parameter.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Retrieves a collection of the custom attributes from the parameter.</summary>
      <returns>A collection of the custom attributes from the parameter.</returns>
      <typeparam name="TAttribute">The type of the custom attributes.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.IsOptional">
      <summary>Gets a value that indicates whether the parameter is optional.</summary>
      <returns>true if the parameter is optional; otherwise false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterInfo">
      <summary>Gets or sets the parameter information.</summary>
      <returns>The parameter information.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterName">
      <summary>Gets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterType">
      <summary>Gets the type of the parameter.</summary>
      <returns>The type of the parameter.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ResponseMessageResultConverter">
      <summary>Represents a converter for actions with a return type of <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converts a <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" /> object to another object.</summary>
      <returns>The converted object.</returns>
      <param name="controllerContext">The controller context.</param>
      <param name="actionResult">The action result.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ServicesContainer">
      <summary>An abstract class that provides a container for services used by ASP.NET Web API.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Add(System.Type,System.Object)">
      <summary> Adds a service to the end of services list for the given service type.  </summary>
      <param name="serviceType">The service type.</param>
      <param name="service">The service instance.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.AddRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Adds the services of the specified collection to the end of the services list for the given service type. </summary>
      <param name="serviceType">The service type.</param>
      <param name="services">The services to add.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Clear(System.Type)">
      <summary> Removes all the service instances of the given service type.  </summary>
      <param name="serviceType">The service type to clear from the services list.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearMultiple(System.Type)">
      <summary>Removes all instances of a multi-instance service type.</summary>
      <param name="serviceType">The service type to remove.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearSingle(System.Type)">
      <summary>Removes a single-instance service type.</summary>
      <param name="serviceType">The service type to remove.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.FindIndex(System.Type,System.Predicate{System.Object})">
      <summary> Searches for a service that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence. </summary>
      <returns>The zero-based index of the first occurrence, if found; otherwise, -1.</returns>
      <param name="serviceType">The service type.</param>
      <param name="match">The delegate that defines the conditions of the element to search for. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetService(System.Type)">
      <summary>Gets a service instance of a specified type.</summary>
      <param name="serviceType">The service type.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServiceInstances(System.Type)">
      <summary>Gets a mutable list of service instances of a specified type.</summary>
      <returns>A mutable list of service instances.</returns>
      <param name="serviceType">The service type.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServices(System.Type)">
      <summary>Gets a collection of service instanes of a specified type.</summary>
      <returns>A collection of service instances.</returns>
      <param name="serviceType">The service type.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Insert(System.Type,System.Int32,System.Object)">
      <summary> Inserts a service into the collection at the specified index. </summary>
      <param name="serviceType">The service type.</param>
      <param name="index">The zero-based index at which the service should be inserted. If <see cref="F:System.Int32.MaxValue" /> is passed, ensures the element is added to the end.</param>
      <param name="service">The service to insert.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.InsertRange(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Inserts the elements of the collection into the service list at the specified index. </summary>
      <param name="serviceType">The service type.</param>
      <param name="index">The zero-based index at which the new elements should be inserted. If <see cref="F:System.Int32.MaxValue" /> is passed, ensures the elements are added to the end.</param>
      <param name="services">The collection of services to insert.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.IsSingleService(System.Type)">
      <summary> Determine whether the service type should be fetched with GetService or GetServices.  </summary>
      <returns>true iff the service is singular. </returns>
      <param name="serviceType">type of service to query</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Remove(System.Type,System.Object)">
      <summary> Removes the first occurrence of the given service from the service list for the given service type. </summary>
      <returns>true if the item is successfully removed; otherwise, false.</returns>
      <param name="serviceType">The service type.</param>
      <param name="service">The service instance to remove.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAll(System.Type,System.Predicate{System.Object})">
      <summary> Removes all the elements that match the conditions defined by the specified predicate. </summary>
      <returns>The number of elements removed from the list.</returns>
      <param name="serviceType">The service type.</param>
      <param name="match">The delegate that defines the conditions of the elements to remove.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAt(System.Type,System.Int32)">
      <summary> Removes the service at the specified index. </summary>
      <param name="serviceType">The service type.</param>
      <param name="index">The zero-based index of the service to remove.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Replace(System.Type,System.Object)">
      <summary> Replaces all existing services for the given service type with the given service instance. This works for both singular and plural services.  </summary>
      <param name="serviceType">The service type.</param>
      <param name="service">The service instance.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceMultiple(System.Type,System.Object)">
      <summary>Replaces all instances of a multi-instance service with a new instance.</summary>
      <param name="serviceType">The type of service.</param>
      <param name="service">The service instance that will replace the current services of this type.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Replaces all existing services for the given service type with the given service instances. </summary>
      <param name="serviceType">The service type.</param>
      <param name="services">The service instances.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceSingle(System.Type,System.Object)">
      <summary>Replaces a single-instance service of a specified type.</summary>
      <param name="serviceType">The service type. </param>
      <param name="service">The service instance.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ResetCache(System.Type)">
      <summary>Removes the cached values for a single service type.</summary>
      <param name="serviceType">The service type.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ValueResultConverter`1">
      <summary> A converter for creating responses from actions that return an arbitrary <paramref name="T" /> value. </summary>
      <typeparam name="T">The declared return type of an action.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.ValueResultConverter`1" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converts the result of an action with arbitrary return type <paramref name="T" /> to an instance of <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>The newly created <see cref="T:System.Net.Http.HttpResponseMessage" /> object.</returns>
      <param name="controllerContext">The action controller context.</param>
      <param name="actionResult">The execution result.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.VoidResultConverter">
      <summary>Represents a converter for creating a response from actions that do not return a value.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Controllers.VoidResultConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converts the created response from actions that do not return a value.</summary>
      <returns>The converted response.</returns>
      <param name="controllerContext">The context of the controller.</param>
      <param name="actionResult">The result of the action.</param>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyResolver">
      <summary>Represents a dependency injection container.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope">
      <summary> Starts a resolution scope. </summary>
      <returns>The dependency scope.</returns>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyScope">
      <summary>Represents an interface for the range of the dependencies.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)">
      <summary>Retrieves a service from the scope.</summary>
      <returns>The retrieved service.</returns>
      <param name="serviceType">The service to be retrieved.</param>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)">
      <summary>Retrieves a collection of services from the scope.</summary>
      <returns>The retrieved collection of services.</returns>
      <param name="serviceType">The collection of services to be retrieved.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiDescription">
      <summary> Describes an API defined by relative URI path and HTTP method. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiDescription.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.Description.ApiDescription" /> class. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ActionDescriptor">
      <summary> Gets or sets the action descriptor that will handle the API. </summary>
      <returns> The action descriptor. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Documentation">
      <summary> Gets or sets the documentation of the API. </summary>
      <returns> The documentation. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.HttpMethod">
      <summary> Gets or sets the HTTP method. </summary>
      <returns> The HTTP method. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ID">
      <summary> Gets the ID. The ID is unique within <see cref="T:System.Web.Http.HttpServer" />. </summary>
      <returns>The ID.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ParameterDescriptions">
      <summary> Gets the parameter descriptions. </summary>
      <returns>The parameter descriptions.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.RelativePath">
      <summary> Gets or sets the relative path. </summary>
      <returns> The relative path. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ResponseDescription">
      <summary>Gets or sets the response description.</summary>
      <returns>The response description.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Route">
      <summary> Gets or sets the registered route for the API. </summary>
      <returns> The route. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedRequestBodyFormatters">
      <summary> Gets the supported request body formatters. </summary>
      <returns>The supported request body formatters.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedResponseFormatters">
      <summary> Gets the supported response formatters. </summary>
      <returns>The supported response formatters.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorer">
      <summary> Explores the URI space of the service based on routes, controllers and actions available in the system. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.Description.ApiExplorer" /> class. </summary>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions">
      <summary> Gets the API descriptions. The descriptions are initialized on the first access. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.DocumentationProvider">
      <summary> Gets or sets the documentation provider. The provider will be responsible for documenting the API. </summary>
      <returns> The documentation provider. </returns>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.GetHttpMethodsSupportedByAction(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Gets a collection of HttpMethods supported by the action. Called when initializing the <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>A collection of HttpMethods supported by the action.</returns>
      <param name="route">The route.</param>
      <param name="actionDescriptor">The action descriptor.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreAction(System.String,System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Determines whether the action should be considered for <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> generation. Called when initializing the <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>true if the action should be considered for <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> generation, false otherwise.</returns>
      <param name="actionVariableValue">The action variable value from the route.</param>
      <param name="actionDescriptor">The action descriptor.</param>
      <param name="route">The route.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreController(System.String,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Determines whether the controller should be considered for <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> generation. Called when initializing the <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>true if the controller should be considered for <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" /> generation, false otherwise.</returns>
      <param name="controllerVariableValue">The controller variable value from the route.</param>
      <param name="controllerDescriptor">The controller descriptor.</param>
      <param name="route">The route.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorerSettingsAttribute">
      <summary> This attribute can be used on the controllers and actions to influence the behavior of <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorerSettingsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Description.ApiExplorerSettingsAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorerSettingsAttribute.IgnoreApi">
      <summary> Gets or sets a value indicating whether to exclude the controller or action from the <see cref="T:System.Web.Http.Description.ApiDescription" /> instances generated by <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <returns>true if the controller or action should be ignored; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterDescription">
      <summary> Describes a parameter on the API defined by relative URI path and HTTP method. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiParameterDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Description.ApiParameterDescription" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Documentation">
      <summary> Gets or sets the documentation. </summary>
      <returns> The documentation. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Name">
      <summary> Gets or sets the name. </summary>
      <returns> The name. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.ParameterDescriptor">
      <summary> Gets or sets the parameter descriptor. </summary>
      <returns> The parameter descriptor. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Source">
      <summary> Gets or sets the source of the parameter. It may come from the request URI, request body or other places. </summary>
      <returns> The source. </returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterSource">
      <summary> Describes where the parameter come from. </summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromBody">
      <summary>The parameter come from Body.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromUri">
      <summary>The parameter come from Uri.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.Unknown">
      <summary>The location is unknown.</summary>
    </member>
    <member name="T:System.Web.Http.Description.IApiExplorer">
      <summary> Defines the interface for getting a collection of <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.IApiExplorer.ApiDescriptions">
      <summary> Gets the API descriptions. </summary>
    </member>
    <member name="T:System.Web.Http.Description.IDocumentationProvider">
      <summary> Defines the provider responsible for documenting the service. </summary>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Gets the documentation based on <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />. </summary>
      <returns>The documentation for the controller.</returns>
      <param name="actionDescriptor">The action descriptor.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)"></member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Gets the documentation based on <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />. </summary>
      <returns>The documentation for the controller.</returns>
      <param name="parameterDescriptor">The parameter descriptor.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)"></member>
    <member name="T:System.Web.Http.Description.ResponseDescription">
      <summary>Describes the API response.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Description.ResponseDescription" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.DeclaredType">
      <summary>Gets or sets the declared response type.</summary>
      <returns>The declared response type.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.Documentation">
      <summary>Gets or sets the response documentation.</summary>
      <returns>The response documentation.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.ResponseType">
      <summary>Gets or sets the actual response type.</summary>
      <returns>The actual response type.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ResponseTypeAttribute">
      <summary>Use this to specify the entity type returned by an action when the declared return type is <see cref="T:System.Net.Http.HttpResponseMessage" /> or <see cref="T:System.Web.Http.IHttpActionResult" />. The <see cref="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType" /> will be read by <see cref="T:System.Web.Http.Description.ApiExplorer" /> when generating <see cref="T:System.Web.Http.Description.ApiDescription" />.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Description.ResponseTypeAttribute" /> class.</summary>
      <param name="responseType">The response type.</param>
    </member>
    <member name="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType">
      <summary>Gets the response type.</summary>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver">
      <summary> Provides an implementation of <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> with no external dependencies. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.GetAssemblies">
      <summary> Returns a list of assemblies available for the application. </summary>
      <returns>A &lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt; of assemblies.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator">
      <summary>Represents a default implementation of an <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />. A different implementation can be registered via the <see cref="T:System.Web.Http.Services.DependencyResolver" />. We optimize for the case where we have an <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />  instance per <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> instance but can support cases where there are many <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> instances for one <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />  as well. In the latter case the lookup is slightly slower because it goes through the <see cref="P:HttpControllerDescriptor.Properties" /> dictionary. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary> Creates the <see cref="T:System.Web.Http.Controllers.IHttpController" /> specified by <paramref name="controllerType" /> using the given <paramref name="request" />.</summary>
      <returns>An instance of type <paramref name="controllerType" />.</returns>
      <param name="request">The request message.</param>
      <param name="controllerDescriptor">The controller descriptor.</param>
      <param name="controllerType">The type of the controller.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector">
      <summary>Represents a default <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> instance for choosing a <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> given a <see cref="T:System.Net.Http.HttpRequestMessage" />. A different implementation can be registered via the <see cref="P:System.Web.Http.HttpConfiguration.Services" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" /> class.</summary>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="F:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.ControllerSuffix">
      <summary>Specifies the suffix string in the controller name.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
      <summary>Returns a map, keyed by controller string, of all <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> that the selector can select. </summary>
      <returns>A map of all <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> that the selector can select, or null if the selector does not have a well-defined mapping of <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <summary>Gets the name of the controller for the specified <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>The name of the controller for the specified <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary>Selects a <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> for the given <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>The <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> instance for the given <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">The HTTP request message.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver">
      <summary> Provides an implementation of <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> with no external dependencies. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor(System.Predicate{System.Type})">
      <summary>Initializes a new <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" /> instance using a predicate to filter controller types. </summary>
      <param name="predicate">The predicate.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Returns a list of controllers available for the application. </summary>
      <returns>An &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; of controllers.</returns>
      <param name="assembliesResolver">The assemblies resolver.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
      <summary>Gets a value whether the resolver type is a controller type predicate.</summary>
      <returns>true if the resolver type is a controller type predicate; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpControllerDispatcher">
      <summary>Dispatches an incoming <see cref="T:System.Net.Http.HttpRequestMessage" /> to an <see cref="T:System.Web.Http.Controllers.IHttpController" /> implementation for processing.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> class with the specified configuration.</summary>
      <param name="configuration">The http configuration.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.HttpControllerDispatcher.Configuration">
      <summary>Gets the HTTP configuration.</summary>
      <returns>The HTTP configuration.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Dispatches an incoming <see cref="T:System.Net.Http.HttpRequestMessage" /> to an <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the ongoing operation.</returns>
      <param name="request">The request to dispatch</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher">
      <summary> This class is the default endpoint message handler which examines the <see cref="T:System.Web.Http.Routing.IHttpRoute" /> of the matched route, and chooses which message handler to call. If <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> is null, then it delegates to <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" /> class, using the provided <see cref="T:System.Web.Http.HttpConfiguration" /> and <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> as the default handler. </summary>
      <param name="configuration">The server configuration.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary> Initializes a new instance of the <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" /> class, using the provided <see cref="T:System.Web.Http.HttpConfiguration" /> and <see cref="T:System.Net.Http.HttpMessageHandler" />. </summary>
      <param name="configuration">The server configuration.</param>
      <param name="defaultHandler">The default handler to use when the <see cref="T:System.Web.Http.Routing.IHttpRoute" /> has no <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" />.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Sends an HTTP request as an asynchronous operation.</summary>
      <returns>The task object representing the asynchronous operation.</returns>
      <param name="request">The HTTP request message to send.</param>
      <param name="cancellationToken">The cancellation token to cancel operation.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IAssembliesResolver">
      <summary> Provides an abstraction for managing the assemblies of an application. A different implementation can be registered via the <see cref="T:System.Web.Http.Services.DependencyResolver" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IAssembliesResolver.GetAssemblies">
      <summary> Returns a list of assemblies available for the application. </summary>
      <returns>An &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; of assemblies.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerActivator">
      <summary>Defines the methods that are required for an <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary>Creates an <see cref="T:System.Web.Http.Controllers.IHttpController" /> object.</summary>
      <returns>An <see cref="T:System.Web.Http.Controllers.IHttpController" /> object.</returns>
      <param name="request">The message request.</param>
      <param name="controllerDescriptor">The HTTP controller descriptor.</param>
      <param name="controllerType">The type of the controller.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerSelector">
      <summary> Defines the methods that are required for an <see cref="T:System.Web.Http.Controllers.IHttpController" /> factory. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
      <summary> Returns a map, keyed by controller string, of all <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> that the selector can select.  This is primarily called by <see cref="T:System.Web.Http.Description.IApiExplorer" /> to discover all the possible controllers in the system. </summary>
      <returns>A map of all <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> that the selector can select, or null if the selector does not have a well-defined mapping of <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary> Selects a <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> for the given <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <returns>An <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> instance.</returns>
      <param name="request">The request message.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver">
      <summary> Provides an abstraction for managing the controller types of an application. A different implementation can be registered via the DependencyResolver.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Returns a list of controllers available for the application. </summary>
      <returns>An &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; of controllers.</returns>
      <param name="assembliesResolver">The resolver for failed assemblies.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks">
      <summary>Provides the catch blocks used within this assembly.</summary>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler">
      <summary>Gets the catch block in System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler.SendAsync.</summary>
      <returns>The catch block in System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher">
      <summary>Gets the catch block in System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher.SendAsync.</summary>
      <returns>The catch block in System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer">
      <summary>Gets the catch block in System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer.SendAsync.</summary>
      <returns>The catch block in System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter">
      <summary>Gets the catch block in System.Web.Http.ApiController.ExecuteAsync when using <see cref="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter" />.</summary>
      <returns>The catch block in System.Web.Http.ApiController.ExecuteAsync when using <see cref="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionContext">
      <summary>Represents an exception and the contextual data associated with it when it was caught.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" /> class.</summary>
      <param name="exception">The caught exception.</param>
      <param name="catchBlock">The catch block where the exception was caught.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Net.Http.HttpRequestMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" /> class.</summary>
      <param name="exception">The caught exception.</param>
      <param name="catchBlock">The catch block where the exception was caught.</param>
      <param name="request">The request being processed when the exception was caught.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" /> class.</summary>
      <param name="exception">The caught exception.</param>
      <param name="catchBlock">The catch block where the exception was caught.</param>
      <param name="request">The request being processed when the exception was caught.</param>
      <param name="response">The repsonse being returned when the exception was caught.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Web.Http.Controllers.HttpActionContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" /> class.</summary>
      <param name="exception">The caught exception.</param>
      <param name="catchBlock">The catch block where the exception was caught.</param>
      <param name="actionContext">The action context in which the exception occurred.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.ActionContext">
      <summary>Gets the action context in which the exception occurred, if available.</summary>
      <returns>The action context in which the exception occurred, if available.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.CatchBlock">
      <summary>Gets the catch block in which the exception was caught.</summary>
      <returns>The catch block in which the exception was caught.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.ControllerContext">
      <summary>Gets the controller context in which the exception occurred, if available.</summary>
      <returns>The controller context in which the exception occurred, if available.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Exception">
      <summary>Gets the caught exception.</summary>
      <returns>The caught exception.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Request">
      <summary>Gets the request being processed when the exception was caught.</summary>
      <returns>The request being processed when the exception was caught.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.RequestContext">
      <summary>Gets the request context in which the exception occurred.</summary>
      <returns>The request context in which the exception occurred.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Response">
      <summary>Gets the response being sent when the exception was caught.</summary>
      <returns>The response being sent when the exception was caught.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock">
      <summary>Represents the catch block location for an exception context.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock" /> class.</summary>
      <param name="name">The label for the catch block where the exception was caught.</param>
      <param name="isTopLevel">A value indicating whether the catch block where the exception was caught is the last one before the host.</param>
      <param name="callsHandler">A value indicating whether exceptions in the catch block can be handled after they are logged.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.CallsHandler">
      <summary>Gets a value indicating whether exceptions in the catch block can be handled after they are logged.</summary>
      <returns>A value indicating whether exceptions in the catch block can be handled after they are logged.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.IsTopLevel">
      <summary>Gets a value indicating whether the catch block where the exception was caught is the last one before the host.</summary>
      <returns>A value indicating whether the catch block where the exception was caught is the last one before the host.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.Name">
      <summary>Gets a label for the catch block in which the exception was caught.</summary>
      <returns>A label for the catch block in which the exception was caught.</returns>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandler">
      <summary>Represents an unhandled exception handler.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>When overridden in a derived class, handles the exception synchronously.</summary>
      <param name="context">The exception handler context.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <summary>When overridden in a derived class, handles the exception asynchronously.</summary>
      <returns>A task representing the asynchronous exception handling operation.</returns>
      <param name="context">The exception handler context.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.ShouldHandle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>Determines whether the exception should be handled.</summary>
      <returns>true if the exception should be handled; otherwise, false.</returns>
      <param name="context">The exception handler context.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.System#Web#Http#ExceptionHandling#IExceptionHandler#HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext">
      <summary>Represents the context within which unhandled exception handling occurs.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.#ctor(System.Web.Http.ExceptionHandling.ExceptionContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" /> class.</summary>
      <param name="exceptionContext">The exception context.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.CatchBlock">
      <summary>Gets the catch block in which the exception was caught.</summary>
      <returns>The catch block in which the exception was caught.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Exception">
      <summary>Gets the caught exception.</summary>
      <returns>The caught exception.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.ExceptionContext">
      <summary>Gets the exception context providing the exception and related data.</summary>
      <returns>The exception context providing the exception and related data.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Request">
      <summary>Gets the request being processed when the exception was caught.</summary>
      <returns>The request being processed when the exception was caught.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.RequestContext">
      <summary>Gets the request context in which the exception occurred.</summary>
      <returns>The request context in which the exception occurred.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Result">
      <summary>Gets or sets the result providing the response message when the exception is handled.</summary>
      <returns>The result providing the response message when the exception is handled.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandlerExtensions">
      <summary>Provides extension methods for <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandlerExtensions.HandleAsync(System.Web.Http.ExceptionHandling.IExceptionHandler,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)">
      <summary>Calls an exception handler and determines the response handling it, if any.</summary>
      <returns>A task that, when completed, contains the response message to return when the exception is handled, or null when the exception remains unhandled.</returns>
      <param name="handler">The unhandled exception handler.</param>
      <param name="context">The exception context.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLogger">
      <summary>Represents an unhandled exception logger.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLogger" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>When overridden in a derived class, logs the exception synchronously.</summary>
      <param name="context">The exception logger context.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <summary>When overridden in a derived class, logs the exception asynchronously.</summary>
      <returns>A task representing the asynchronous exception logging operation.</returns>
      <param name="context">The exception logger context.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.ShouldLog(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>Determines whether the exception should be logged.</summary>
      <returns>true if the exception should be logged; otherwise, false.</returns>
      <param name="context">The exception logger context.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.System#Web#Http#ExceptionHandling#IExceptionLogger#LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <returns>Returns <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext">
      <summary>Represents the context within which unhandled exception logging occurs.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.#ctor(System.Web.Http.ExceptionHandling.ExceptionContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" /> class.</summary>
      <param name="exceptionContext">The exception context.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.CallsHandler">
      <summary>Gets or sets a value indicating whether the exception can subsequently be handled by an <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" /> to produce a new response message.</summary>
      <returns>A value indicating whether the exception can subsequently be handled by an <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" /> to produce a new response message.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.CatchBlock">
      <summary>Gets the catch block in which the exception was caught.</summary>
      <returns>The catch block in which the exception was caught.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.Exception">
      <summary>Gets the caught exception.</summary>
      <returns>The caught exception.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.ExceptionContext">
      <summary>Gets the exception context providing the exception and related data.</summary>
      <returns>The exception context providing the exception and related data.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.Request">
      <summary>Gets the request being processed when the exception was caught.</summary>
      <returns>The request being processed when the exception was caught.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.RequestContext">
      <summary>Gets the request context in which the exception occurred.</summary>
      <returns>The request context in which the exception occurred.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions">
      <summary>Provides extension methods for <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions.LogAsync(System.Web.Http.ExceptionHandling.IExceptionLogger,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)">
      <summary>Calls an exception logger.</summary>
      <returns>A task representing the asynchronous exception logging operation.</returns>
      <param name="logger">The unhandled exception logger.</param>
      <param name="context">The exception context.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionServices">
      <summary>Creates exception services to call logging and handling from catch blocks.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetHandler(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets an exception handler that calls the registered handler service, if any, and ensures exceptions do not accidentally propagate to the host.</summary>
      <returns>An exception handler that calls any registered handler and ensures exceptions do not accidentally propagate to the host.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetHandler(System.Web.Http.HttpConfiguration)">
      <summary>Gets an exception handler that calls the registered handler service, if any, and ensures exceptions do not accidentally propagate to the host.</summary>
      <returns>An exception handler that calls any registered handler and ensures exceptions do not accidentally propagate to the host.</returns>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetLogger(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Gets an exception logger that calls all registered logger services.</summary>
      <returns>A composite logger.</returns>
      <param name="services">The services container.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetLogger(System.Web.Http.HttpConfiguration)">
      <summary>Gets an exception logger that calls all registered logger services.</summary>
      <returns>A composite logger.</returns>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.IExceptionHandler">
      <summary>Defines an unhandled exception handler.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.IExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <summary>Process an unhandled exception, either allowing it to propagate or handling it by providing a response message to return instead.</summary>
      <returns>A task representing the asynchronous exception handling operation.</returns>
      <param name="context">The exception handler context.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.IExceptionLogger">
      <summary>Defines an unhandled exception logger.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <summary>Logs an unhandled exception.</summary>
      <returns>A task representing the asynchronous exception logging operation.</returns>
      <param name="context">The exception logger context.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionDescriptorFilterProvider">
      <summary>Provides information about an action method, such as its name, controller, parameters, attributes, and filters.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.ActionDescriptorFilterProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Returns the filters that are associated with this action method.</summary>
      <returns>The filters that are associated with this action method.</returns>
      <param name="configuration">The configuration.</param>
      <param name="actionDescriptor">The action descriptor.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionFilterAttribute">
      <summary>Represents the base class for all action-filter attributes.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.ActionFilterAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Occurs after the action method is invoked.</summary>
      <param name="actionExecutedContext">The action executed context.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Occurs before the action method is invoked.</summary>
      <param name="actionContext">The action context.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.System#Web#Http#Filters#IActionFilter#ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Executes the filter action asynchronously.</summary>
      <returns>The newly created task for this operation.</returns>
      <param name="actionContext">The action context.</param>
      <param name="cancellationToken">The cancellation token assigned for this task.</param>
      <param name="continuation">The delegate function to continue after the action method is invoked.</param>
    </member>
    <member name="T:System.Web.Http.Filters.AuthorizationFilterAttribute">
      <summary>Provides details for authorization filter.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Calls when a process requests authorization.</summary>
      <param name="actionContext">The action context, which encapsulates information for using <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.System#Web#Http#Filters#IAuthorizationFilter#ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Executes the authorization filter during synchronization.</summary>
      <returns>The authorization filter during synchronization.</returns>
      <param name="actionContext">The action context, which encapsulates information for using <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
      <param name="cancellationToken">The cancellation token that cancels the operation.</param>
      <param name="continuation">A continuation of the operation.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ConfigurationFilterProvider">
      <summary>Represents the configuration filter provider.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.ConfigurationFilterProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Returns the filters that are associated with this configuration method.</summary>
      <returns>The filters that are associated with this configuration method.</returns>
      <param name="configuration">The configuration.</param>
      <param name="actionDescriptor">The action descriptor.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ExceptionFilterAttribute">
      <summary>Represents the attributes for the exception filter.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.ExceptionFilterAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Raises the exception event.</summary>
      <param name="actionExecutedContext">The context for the action.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnExceptionAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.System#Web#Http#Filters#IExceptionFilter#ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Asynchronously executes the exception filter.</summary>
      <returns>The result of the execution.</returns>
      <param name="actionExecutedContext">The context for the action.</param>
      <param name="cancellationToken">The cancellation context.</param>
    </member>
    <member name="T:System.Web.Http.Filters.FilterAttribute">
      <summary>Represents the base class for action-filter attributes.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.FilterAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.FilterAttribute.AllowMultiple">
      <summary>Gets a value that indicates whether multiple filters are allowed.</summary>
      <returns>true if multiple filters are allowed; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterInfo">
      <summary>Provides information about the available action filters.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterInfo.#ctor(System.Web.Http.Filters.IFilter,System.Web.Http.Filters.FilterScope)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.FilterInfo" /> class.</summary>
      <param name="instance">The instance of this class.</param>
      <param name="scope">The scope of this class.</param>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Instance">
      <summary>Gets or sets an instance of the <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>A <see cref="T:System.Web.Http.Filters.FilterInfo" />.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Scope">
      <summary>Gets or sets the scope <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>The scope of the FilterInfo.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterScope">
      <summary>Defines values that specify the order in which filters run within the same filter type and filter order.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Action">
      <summary>Specifies an order after Controller. </summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Controller">
      <summary>Specifies an order before Action and after Global.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Global">
      <summary>Specifies an action before Controller.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpActionExecutedContext">
      <summary>Represents the action of the HTTP executed context.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" /> class.</summary>
      <param name="actionContext">The action context.</param>
      <param name="exception">The exception.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.ActionContext">
      <summary>Gets or sets the HTTP action context.</summary>
      <returns>The HTTP action context.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Exception">
      <summary>Gets or sets the exception that was raised during the execution.</summary>
      <returns>The exception that was raised during the execution.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Request">
      <summary>Gets the <see cref="T:System.Net.Http.HttpRequestMessage" /> object for the context.</summary>
      <returns>The <see cref="T:System.Net.Http.HttpRequestMessage" /> object for the context.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Response">
      <summary>Gets or sets the <see cref="T:System.Net.Http.HttpResponseMessage" /> for the context.</summary>
      <returns>The <see cref="T:System.Net.Http.HttpResponseMessage" /> for the context.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext">
      <summary>Represents an authentication challenge context containing information for executing an authentication challenge.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationChallengeContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.IHttpActionResult)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext" /> class.</summary>
      <param name="actionContext">The action context.</param>
      <param name="result">The current action result.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.ActionContext">
      <summary>Gets the action context.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Request">
      <summary>Gets the request message.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Result">
      <summary>Gets or sets the action result to execute.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationContext">
      <summary>Represents an authentication context containing information for performing authentication.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Security.Principal.IPrincipal)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.HttpAuthenticationContext" /> class.</summary>
      <param name="actionContext">The action context.</param>
      <param name="principal">The current principal.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ActionContext">
      <summary>Gets the action context.</summary>
      <returns>The action context.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ErrorResult">
      <summary>Gets or sets an action result that will produce an error response (if authentication failed; otherwise, null).</summary>
      <returns>An action result that will produce an error response.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Principal">
      <summary>Gets or sets the authenticated principal.</summary>
      <returns>The authenticated principal.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Request">
      <summary>Gets the request message.</summary>
      <returns>The request message.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpFilterCollection">
      <summary>Represents a collection of HTTP filters.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Filters.HttpFilterCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Add(System.Web.Http.Filters.IFilter)">
      <summary>Adds an item at the end of the collection.</summary>
      <param name="filter">The item to add to the collection.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.AddRange(System.Collections.Generic.IEnumerable{System.Web.Http.Filters.IFilter})"></member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Clear">
      <summary>Removes all item in the collection.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Contains(System.Web.Http.Filters.IFilter)">
      <summary>Determines whether the collection contains the specified item.</summary>
      <returns>true if the collection contains the specified item; otherwise, false.</returns>
      <param name="filter">The item to check.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpFilterCollection.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>An enumerator object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Remove(System.Web.Http.Filters.IFilter)">
      <summary>Removes the specified item from the collection.</summary>
      <param name="filter">The item to remove in the collection.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an enumerator that iterates through the collection.</summary>
      <returns>An enumerator object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IActionFilter">
      <summary>Defines the methods that are used in an action filter.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Executes the filter action asynchronously.</summary>
      <returns>The newly created task for this operation.</returns>
      <param name="actionContext">The action context.</param>
      <param name="cancellationToken">The cancellation token assigned for this task.</param>
      <param name="continuation">The delegate function to continue after the action method is invoked.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IAuthenticationFilter">
      <summary>Defines a filter that performs authentication.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)">
      <summary>Authenticates the request.</summary>
      <returns>A Task that will perform authentication.</returns>
      <param name="context">The authentication context.</param>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.Filters.IAuthorizationFilter">
      <summary>Defines the methods that are required for an authorization filter.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthorizationFilter.ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Executes the authorization filter to synchronize.</summary>
      <returns>The authorization filter to synchronize.</returns>
      <param name="actionContext">The action context.</param>
      <param name="cancellationToken">The cancellation token associated with the filter.</param>
      <param name="continuation">The continuation.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IExceptionFilter">
      <summary>Defines the methods that are required for an exception filter.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IExceptionFilter.ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Executes an asynchronous exception filter.</summary>
      <returns>An asynchronous exception filter.</returns>
      <param name="actionExecutedContext">The action executed context.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IFilter">
      <summary>Defines the methods that are used in a filter.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.IFilter.AllowMultiple">
      <summary>Gets or sets a value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</summary>
      <returns>true if more than one instance is allowed to be specified; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IFilterProvider">
      <summary>Provides filter information.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Returns an enumeration of filters.</summary>
      <returns>An enumeration of filters.</returns>
      <param name="configuration">The HTTP configuration.</param>
      <param name="actionDescriptor">The action descriptor.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IOverrideFilter"></member>
    <member name="P:System.Web.Http.Filters.IOverrideFilter.FiltersToOverride"></member>
    <member name="T:System.Web.Http.Hosting.HttpPropertyKeys">
      <summary> Provides common keys for properties stored in the <see cref="P:System.Net.Http.HttpRequestMessage.Properties" /></summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.ClientCertificateKey">
      <summary>Provides a key for the client certificate for this request.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DependencyScope">
      <summary>Provides a key for the <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> associated with this request.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DisposableRequestResourcesKey">
      <summary>Provides a key for the collection of resources that should be disposed when a request is disposed.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpActionDescriptorKey">
      <summary> Provides a key for the <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> associated with this request. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpConfigurationKey">
      <summary>Provides a key for the <see cref="T:System.Web.Http.HttpConfiguration" /> associated with this request.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpRouteDataKey">
      <summary>Provides a key for the <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> associated with this request.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IncludeErrorDetailKey">
      <summary>Provides a key that indicates whether error details are to be included in the response for this HTTP request.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsBatchRequest">
      <summary> Provides a key that indicates whether the request is a batch request. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsLocalKey">
      <summary>Provides a key that indicates whether the request originates from a local address.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.NoRouteMatched">
      <summary> Provides a key that indicates whether the request failed to match a route. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestContextKey">
      <summary>Provides a key for the <see cref="T:System.Web.Http.Controllers.HttpRequestContext" /> for this request.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestCorrelationKey">
      <summary>Provides a key for the <see cref="T:System.Guid" /> stored in <see cref="T:System.Net.Http.Properties" />. This is the correlation ID for that request.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestQueryNameValuePairsKey">
      <summary>Provides a key for the parsed query string stored in <see cref="T:System.Net.Http.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RetrieveClientCertificateDelegateKey">
      <summary>Provides a key for a delegate which can retrieve the client certificate for this request.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.SynchronizationContextKey">
      <summary>Provides a key for the current <see cref="T:System.Threading.SynchronizationContext" /> stored in Properties(). If Current() is null then no context is stored.</summary>
    </member>
    <member name="T:System.Web.Http.Hosting.IHostBufferPolicySelector">
      <summary> Interface for controlling the use of buffering requests and responses in the host. If a host provides support for buffering requests and/or responses then it can use this interface to determine the policy for when buffering is to be used.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Determines whether the host should buffer the <see cref="T:System.Net.Http.HttpRequestMessage" /> entity body.</summary>
      <returns>true if buffering should be used; otherwise a streamed request should be used.</returns>
      <param name="hostContext">The host context.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Determines whether the host should buffer the <see cref="T.System.Net.Http.HttpResponseMessage" /> entity body.</summary>
      <returns>true if buffering should be used; otherwise a streamed response should be used.</returns>
      <param name="response">The HTTP response message.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler">
      <summary>Represents a message handler that suppresses host authentication results.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Asynchronously sends a request message.</summary>
      <returns>That task that completes the asynchronous operation.</returns>
      <param name="request">The request message to send.</param>
      <param name="cancellationToken">The cancellation token.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadata">
      <summary>Represents the metadata class of the ModelMetadata.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> class.</summary>
      <param name="provider">The provider.</param>
      <param name="containerType">The type of the container.</param>
      <param name="modelAccessor">The model accessor.</param>
      <param name="modelType">The type of the model.</param>
      <param name="propertyName">The name of the property.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.AdditionalValues">
      <summary>Gets a dictionary that contains additional metadata about the model.</summary>
      <returns>A dictionary that contains additional metadata about the model.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ContainerType">
      <summary>Gets or sets the type of the container for the model.</summary>
      <returns>The type of the container for the model.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Gets or sets a value that indicates whether empty strings that are posted back in forms should be converted to null.</summary>
      <returns>true if empty strings that are posted back in forms should be converted to null; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Description">
      <summary>Gets or sets the description of the model.</summary>
      <returns>The description of the model. The default value is null.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetDisplayName">
      <summary>Gets the display name for the model.</summary>
      <returns>The display name for the model.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetValidators(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Gets a list of validators for the model.</summary>
      <returns>A list of validators for the model.</returns>
      <param name="validatorProviders">The validator providers for the model.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsComplexType">
      <summary>Gets or sets a value that indicates whether the model is a complex type.</summary>
      <returns>A value that indicates whether the model is considered a complex.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsNullableValueType">
      <summary>Gets a value that indicates whether the type is nullable.</summary>
      <returns>true if the type is nullable; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsReadOnly">
      <summary>Gets or sets a value that indicates whether the model is read-only.</summary>
      <returns>true if the model is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Model">
      <summary>Gets the value of the model.</summary>
      <returns>The model value can be null.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ModelType">
      <summary>Gets the type of the model.</summary>
      <returns>The type of the model.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Properties">
      <summary>Gets a collection of model metadata objects that describe the properties of the model.</summary>
      <returns>A collection of model metadata objects that describe the properties of the model.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.PropertyName">
      <summary>Gets the property name.</summary>
      <returns>The property name.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Provider">
      <summary>Gets or sets the provider.</summary>
      <returns>The provider.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadataProvider">
      <summary>Provides an abstract base class for a custom metadata provider.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Gets a ModelMetadata object for each property of a model.</summary>
      <returns>A ModelMetadata object for each property of a model.</returns>
      <param name="container">The container.</param>
      <param name="containerType">The type of the container.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Gets a metadata for the specified property.</summary>
      <returns>The metadata model for the specified property.</returns>
      <param name="modelAccessor">The model accessor.</param>
      <param name="containerType">The type of the container.</param>
      <param name="propertyName">The property to get the metadata model for.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Gets the metadata for the specified model accessor and model type.</summary>
      <returns>The metadata.</returns>
      <param name="modelAccessor">The model accessor.</param>
      <param name="modelType">The type of the mode.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1">
      <summary>Provides an abstract class to implement a metadata provider.</summary>
      <typeparam name="TModelMetadata">The type of the model metadata.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1" /> class.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>When overridden in a derived class, creates the model metadata for the property using the specified prototype.</summary>
      <returns>The model metadata for the property.</returns>
      <param name="prototype">The prototype from which to create the model metadata.</param>
      <param name="modelAccessor">The model accessor.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>When overridden in a derived class, creates the model metadata for the property.</summary>
      <returns>The model metadata for the property.</returns>
      <param name="attributes">The set of attributes.</param>
      <param name="containerType">The type of the container.</param>
      <param name="modelType">The type of the model.</param>
      <param name="propertyName">The name of the property.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Retrieves a list of properties for the model.</summary>
      <returns>A list of properties for the model                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         